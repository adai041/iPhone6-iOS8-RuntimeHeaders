/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@class NSDate, NSString, NSURL, NSLock, NSData, NSMutableDictionary, NSDictionary, NSArray, SSItemImageCollection, NSNumber;

@interface SSDownloadMetadata : NSObject <SSXPCCoding, NSCoding, NSCopying> {
    NSMutableDictionary *_dictionary;
    long long _keyStyle;
    NSLock *_lock;
}

@property unsigned long long artistIdentifier;
@property(copy) NSString * artistName;
@property(retain) NSURL * fullSizeImageURL;
@property(retain) NSString * genre;
@property unsigned long long genreIdentifier;
@property unsigned long long itemIdentifier;
@property(retain) NSString * kind;
@property(copy) NSString * longDescription;
@property(retain) NSDate * releaseDate;
@property(retain) NSNumber * releaseYear;
@property(copy) NSString * shortDescription;
@property(retain) NSString * subtitle;
@property(retain) NSString * title;
@property(retain) NSString * transactionIdentifier;
@property(readonly) SSItemImageCollection * thumbnailImageCollection;
@property(retain) NSString * thumbnailNewsstandBindingEdge;
@property(retain) NSString * thumbnailNewsstandBindingType;
@property(retain) NSURL * thumbnailImageURL;
@property(readonly) NSDictionary * primaryAssetDictionary;
@property long long keyStyle;
@property(retain,readonly) NSData * appReceiptData;
@property(getter=isAutomaticDownload) bool automaticDownload;
@property(retain) NSURL * cancelDownloadURL;
@property(retain) NSString * copyright;
@property(retain) NSDictionary * dictionary;
@property(retain) NSString * downloadKey;
@property(readonly) NSNumber * downloaderAccountIdentifier;
@property(retain) NSData * epubRightsData;
@property(retain) NSString * fileExtension;
@property(retain) NSURL * launchExtrasUrl;
@property(readonly) NSArray * MD5HashStrings;
@property(readonly) NSNumber * numberOfBytesToHash;
@property(copy) NSString * pageProgressionDirection;
@property unsigned long long preOrderIdentifier;
@property(retain) NSURL * primaryAssetURL;
@property(copy) NSString * preferredAssetFlavor;
@property(copy) NSURL * transitMapDataURL;
@property(copy) NSString * redownloadActionParameters;
@property(getter=isRedownloadDownload) bool redownloadDownload;
@property(retain) NSString * releaseDateString;
@property(copy) id requiredDeviceCapabilities;
@property(getter=isContentRestricted,readonly) bool contentRestricted;
@property bool shouldDownloadAutomatically;
@property(retain) NSString * sortArtistName;
@property(retain) NSString * sortCollectionName;
@property(retain) NSString * sortTitle;
@property(retain) NSArray * sinfs;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (id)durationInMilliseconds;
- (id)thumbnailImageURL;
- (bool)isContentRestricted;
- (void)setReleaseDate:(id)arg1;
- (void)setThumbnailImageURL:(id)arg1;
- (id)initWithItem:(id)arg1 offer:(id)arg2;
- (void)setDocumentTargetIdentifier:(id)arg1;
- (id)valueForMetadataKey:(id)arg1;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;
- (id)transitMapDataURL;
- (bool)shouldDownloadAutomatically;
- (void)setTransitMapDataURL:(id)arg1;
- (void)setShouldDownloadAutomatically:(bool)arg1;
- (void)setRedownloadDownload:(bool)arg1;
- (void)setMD5HashStrings:(id)arg1 numberOfBytesToHash:(id)arg2;
- (void)setKeyStyle:(long long)arg1;
- (void)setEpubRightsData:(id)arg1;
- (id)preferredAssetFlavor;
- (id)numberOfBytesToHash;
- (id)MD5HashStrings;
- (bool)isRedownloadDownload;
- (bool)isAutomaticDownload;
- (id)epubRightsData;
- (id)copyWritableMetadata;
- (id)appReceiptData;
- (id)videoDetailsDictionary;
- (id)sortCollectionName;
- (id)sortArtistName;
- (void)setSortCollectionName:(id)arg1;
- (void)setSortArtistName:(id)arg1;
- (void)setSagaIdentifier:(unsigned long long)arg1;
- (void)setLaunchExtrasUrl:(id)arg1;
- (unsigned long long)sagaIdentifier;
- (id)primaryAssetDictionary;
- (id)launchExtrasUrl;
- (id)thumbnailImageCollection;
- (void)setPreferredAssetFlavor:(id)arg1;
- (void)setSample:(bool)arg1;
- (void)setAutomaticDownload:(bool)arg1;
- (void)setComposerIdentifier:(unsigned long long)arg1;
- (void)setViewStoreItemURL:(id)arg1;
- (void)setRedownloadActionParameters:(id)arg1;
- (void)setPurchaseDate:(id)arg1;
- (void)setPageProgressionDirection:(id)arg1;
- (void)setLongSeasonDescription:(id)arg1;
- (void)setCloudIdentifier:(id)arg1;
- (void)setCancelDownloadURL:(id)arg1;
- (void)_setValue:(id)arg1 forTopLevelKey:(id)arg2;
- (id)_newDateFormatter;
- (id)_valueForFirstAvailableTopLevelKey:(id)arg1;
- (unsigned long long)composerIdentifier;
- (bool)artworkIsPrerendered;
- (id)viewStoreItemURL;
- (id)thumbnailNewsstandBindingType;
- (id)thumbnailNewsstandBindingEdge;
- (id)redownloadActionParameters;
- (id)cancelDownloadURL;
- (id)transactionIdentifier;
- (id)purchaseDate;
- (id)releaseYear;
- (id)podcastType;
- (id)pageProgressionDirection;
- (id)longSeasonDescription;
- (id)downloadKey;
- (id)documentTargetIdentifier;
- (id)_thumbnailArtworkImage;
- (id)_newImageCollectionWithURLString:(id)arg1;
- (void)_setValueCopy:(id)arg1 forMetadataKey:(id)arg2;
- (long long)keyStyle;
- (id)_releaseDateValue;
- (id)_dateValueForValue:(id)arg1;
- (id)_assetDictionary;
- (id)_urlValueForValue:(id)arg1;
- (id)_stringValueForValue:(id)arg1;
- (id)valueForFirstAvailableKey:(id)arg1;
- (void)setDownloadKey:(id)arg1;
- (void)setPrimaryAssetURL:(id)arg1;
- (void)setPodcastFeedURL:(id)arg1;
- (void)setPodcastType:(id)arg1;
- (void)setReleaseYear:(id)arg1;
- (void)setThumbnailNewsstandBindingType:(id)arg1;
- (void)setThumbnailNewsstandBindingEdge:(id)arg1;
- (void)setArtworkIsPrerendered:(bool)arg1;
- (void)setDurationInMilliseconds:(id)arg1;
- (void)setVideoDetailsDictionary:(id)arg1;
- (void)setSeriesName:(id)arg1;
- (id)seriesName;
- (void)setPodcastEpisodeGUID:(id)arg1;
- (id)podcastEpisodeGUID;
- (void)setNumberOfItemsInCollection:(id)arg1;
- (id)numberOfItemsInCollection;
- (void)setNumberOfCollectionsInCollectionGroup:(id)arg1;
- (id)numberOfCollectionsInCollectionGroup;
- (void)setGenreIdentifier:(unsigned long long)arg1;
- (unsigned long long)genreIdentifier;
- (void)setEpisodeSortIdentifier:(id)arg1;
- (id)episodeSortIdentifier;
- (void)setEpisodeIdentifier:(id)arg1;
- (id)episodeIdentifier;
- (void)setComposerName:(id)arg1;
- (id)composerName;
- (void)setCollectionIndexInCollectionGroup:(id)arg1;
- (id)collectionIndexInCollectionGroup;
- (void)setCollectionArtistName:(id)arg1;
- (id)collectionArtistName;
- (void)setArtistIdentifier:(unsigned long long)arg1;
- (unsigned long long)artistIdentifier;
- (void)setPreOrderIdentifier:(unsigned long long)arg1;
- (unsigned long long)preOrderIdentifier;
- (void)setValuesFromDownload:(id)arg1;
- (id)podcastFeedURL;
- (id)fullSizeImageURL;
- (id)newDownloadProperties;
- (id)downloaderAccountIdentifier;
- (void)setTransactionIdentifier:(id)arg1;
- (void)setIndexInCollection:(id)arg1;
- (id)indexInCollection;
- (bool)isHighDefinition;
- (void)setHighDefinition:(bool)arg1;
- (id)primaryAssetURL;
- (void)setReleaseDateString:(id)arg1;
- (id)releaseDateString;
- (void)setRequiredDeviceCapabilities:(id)arg1;
- (bool)isSample;
- (void)setItemIdentifier:(unsigned long long)arg1;
- (void)setFileExtension:(id)arg1;
- (void)setDictionary:(id)arg1;
- (unsigned long long)collectionIdentifier;
- (id)collectionName;
- (void)setCollectionName:(id)arg1;
- (void)setCollectionIdentifier:(unsigned long long)arg1;
- (id)fileExtension;
- (void)setLongDescription:(id)arg1;
- (unsigned long long)itemIdentifier;
- (void)setKind:(id)arg1;
- (id)longDescription;
- (id)initWithKind:(id)arg1;
- (id)copyright;
- (id)sortTitle;
- (void)setCopyright:(id)arg1;
- (void)setShortDescription:(id)arg1;
- (void)setExplicitContent:(bool)arg1;
- (void)setSortTitle:(id)arg1;
- (void)setRental:(bool)arg1;
- (void)setCompilation:(bool)arg1;
- (void)setArtistName:(id)arg1;
- (id)artistName;
- (void)setContentRating:(id)arg1;
- (id)contentRating;
- (id)genre;
- (void)setGenre:(id)arg1;
- (id)networkName;
- (id)seasonNumber;
- (void)setSeasonNumber:(id)arg1;
- (void)setNetworkName:(id)arg1;
- (id)cloudIdentifier;
- (void)setBundleIdentifier:(id)arg1;
- (id)copyXPCEncoding;
- (id)initWithXPCEncoding:(id)arg1;
- (id)kind;
- (id)shortDescription;
- (void)setSubtitle:(id)arg1;
- (id)subtitle;
- (id)initWithItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)applicationIdentifier;
- (id)title;
- (id)bundleIdentifier;
- (id)dictionary;
- (id)initWithDictionary:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setFullSizeImageURL:(id)arg1;
- (id)requiredDeviceCapabilities;
- (void)setSinfs:(id)arg1;
- (bool)isExplicitContent;
- (id)sinfs;
- (id)releaseDate;
- (bool)isCompilation;
- (bool)isRental;

@end
