/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@class UIPDFAnnotation, NSString, UIPDFMarkupAnnotation, UIPDFPageView, CALayer, <NSObject><UIPDFAnnotationControllerDelegate>, UIColor;

@interface UIPDFAnnotationController : NSObject <UIGestureRecognizerDelegate> {
    UIPDFPageView *_pageView;
    int _lock;
    struct CGPoint { 
        double x; 
        double y; 
    } _startPoint;
    bool_moving;
    UIPDFMarkupAnnotation *_currentAnnotation;
    struct { 
        long long location; 
        long long length; 
    } _initialRange;
    bool_tracking;
    CALayer *_drawingSurface;
    <NSObject><UIPDFAnnotationControllerDelegate> *_delegate;
    struct CGSize { 
        double width; 
        double height; 
    } _cachedMarginNoteSize;
    boolmakeUnderlineAnnotation;
    bool_allowEditing;
    UIColor *_currentColor;
}

@property(readonly) UIPDFPageView * pageView;
@property(retain) UIPDFAnnotation * currentAnnotation;
@property bool allowEditing;
@property UIColor * currentColor;
@property bool makeUnderlineAnnotation;
@property CALayer * drawingSurface;
@property <NSObject><UIPDFAnnotationControllerDelegate> * delegate;
@property(readonly) bool tracking;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (struct CGImage { }*)newMaskImage:(struct CGPDFPage { }*)arg1 size:(struct CGSize { double x1; double x2; })arg2;
+ (bool)pageHasAnnotations:(id)arg1;
+ (id)newAnnotation:(struct CGPDFDictionary { }*)arg1 type:(const char *)arg2;

- (void)setCurrentColor:(id)arg1;
- (bool)tracking;
- (id)drawingSurface;
- (void)setCurrentAnnotation:(id)arg1;
- (struct CGImage { }*)underlineImageFor:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGImage { }*)newHighlightMaskImageFor:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)copyAttributesOf:(id)arg1 to:(id)arg2;
- (id)annotatePageSelection;
- (void)didEndTrackingAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)hostViewDidScroll;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toSurfaceLayer:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toSurfaceLayer:(id)arg2;
- (id)annotationAt:(struct CGPoint { double x1; double x2; })arg1;
- (id)linkAnnotationAt:(struct CGPoint { double x1; double x2; })arg1;
- (id)_linkAnnotationViewAt:(struct CGPoint { double x1; double x2; })arg1;
- (void)mergeSelectionOfAnnotation:(id)arg1;
- (id)currentColor;
- (bool)makeUnderlineAnnotation;
- (bool)trackMoved:(struct CGPoint { double x1; double x2; })arg1;
- (void)_initialRange:(struct CGPoint { double x1; double x2; })arg1;
- (bool)intersects:(struct CGPDFSelection { }*)arg1 with:(struct CGPDFSelection { }*)arg2;
- (bool)isSelection:(struct CGPDFSelection { }*)arg1 equalTo:(struct CGPDFSelection { }*)arg2;
- (struct CGSize { double x1; double x2; })marginNoteImageSize;
- (void)_addAnnotationViewFor:(id)arg1;
- (void)addDrawingSurface:(id)arg1 view:(id)arg2;
- (void)_addRecognizers:(id)arg1;
- (void)linkPressRecognized:(id)arg1;
- (void)annotationTapRecognized:(id)arg1;
- (void)setSurfacePosition:(id)arg1;
- (void)_addLinkAnnotationViewFor:(id)arg1;
- (void)setMakeUnderlineAnnotation:(bool)arg1;
- (bool)linkAnnotationShouldBegin:(id)arg1;
- (bool)willHandleTouchGestureAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)addLinkAnnotationViews;
- (bool)annotationSingleTapRecognized:(id)arg1;
- (bool)annotationLongPressRecognized:(id)arg1;
- (bool)annotationBriefPressRecognized:(id)arg1;
- (bool)isLinkAnnotationAt:(struct CGPoint { double x1; double x2; })arg1;
- (void)doubleTapRecognized:(id)arg1;
- (void)endTrackingAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)madeInstantAnnotation;
- (void)tracking:(struct CGPoint { double x1; double x2; })arg1;
- (void)startTracking:(struct CGPoint { double x1; double x2; })arg1;
- (bool)willTrackAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)currentAnnotation;
- (bool)willDoSomethingWithTap:(struct CGPoint { double x1; double x2; })arg1;
- (void)drawAnnotations:(struct CGContext { }*)arg1;
- (void)layoutAnnotationViews:(id)arg1;
- (void)setDrawingSurface:(id)arg1;
- (id)initWithPageView:(id)arg1;
- (id)marginNoteImage:(id)arg1;
- (id)pageView;
- (void)setView:(id)arg1;
- (void)unlock;
- (void)lock;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)delegate;
- (id)init;
- (void)setDelegate:(id)arg1;
- (void)setNeedsDisplay;
- (void)dealloc;
- (void)addAnnotation:(id)arg1;
- (bool)allowEditing;
- (void)setAllowEditing:(bool)arg1;

@end
