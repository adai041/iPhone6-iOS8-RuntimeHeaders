/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSData, NSString, NSXPCConnection, NSDictionary, NSMutableArray, <MCInteractionDelegate>, NSObject<OS_dispatch_queue>;

@interface MCProfileConnection : NSObject <MCProfileConnectionXPCProtocol> {
    struct __CFBag { } *_observers;
    <MCInteractionDelegate> *_interactionDelegate;
    NSDictionary *_preflightResponse;
    NSData *_originalProfileData;
    NSObject<OS_dispatch_queue> *_notificationSyncQueue;
    NSObject<OS_dispatch_queue> *_xpcConnectionSyncQueue;
    NSObject<OS_dispatch_queue> *_publicXPCConnectionSyncQueue;
    NSMutableArray *_notificationTokens;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id userInputReplyBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id passcodeReplyBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id showWarningsReplyBlock;

    NSXPCConnection *_publicXPCConnection;
    NSXPCConnection *_xpcConnection;
}

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) NSXPCConnection * xpcConnection;
@property(readonly) NSXPCConnection * publicXPCConnection;

+ (id)sharedConnection;
+ (id)profileInstallationErrorWithUnderlyingError:(id)arg1;

- (id)xpcConnection;
- (void)checkInAsynchronously;
- (void)checkIn;
- (void)_internalDefaultsDidChange;
- (void)_applyToObservers:(id)arg1;
- (id)publicXPCConnection;
- (void)_appWhitelistDidChange:(id)arg1;
- (void)_defaultsDidChange;
- (void)_effectiveSettingsDidChange:(id)arg1;
- (void)_profileListDidChange;
- (void)_passcodeDidChange;
- (void)_passcodePolicyDidChange;
- (void)_restrictionDidChange;
- (void)_createAndResumePublicXPCConnection;
- (void)_createAndResumeXPCConnection;
- (void)_queueCreateAndResumePublicXPCConnection;
- (void)_queueCreateAndResumeXPCConnection;
- (void)addObserver:(id)arg1;
- (void).cxx_destruct;
- (void)removeObserver:(id)arg1;
- (id)_init;
- (void)dealloc;
- (int)effectiveRestrictedBoolValueForSetting:(id)arg1;
- (id)objectForFeature:(id)arg1;
- (id)valueForFeature:(id)arg1;
- (int)restrictedBoolValueForFeature:(id)arg1;
- (void)setPasscodeWasSetInBackup:(bool)arg1;
- (bool)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 outRestrictionChanged:(bool*)arg4 outEffectiveSettingsChanged:(bool*)arg5 outError:(id*)arg6;
- (bool)validatePasscode:(id)arg1 andUnlockContentProtectedDevice:(bool)arg2;
- (bool)validatePasscode:(id)arg1;
- (id)passcodeExpiryDate;
- (bool)isPasscodeRequiredByPolicy;
- (id)queueFileDataForProfileInstallation:(id)arg1 originalFileName:(id)arg2 outError:(id*)arg3;
- (id)queueProfileDataForInstallation:(id)arg1 outError:(id*)arg2;
- (id)queueProfileDataForAcceptance:(id)arg1 outError:(id*)arg2;
- (id)profileFromProfileData:(id)arg1 outError:(id*)arg2;
- (void)setDelegate:(id)arg1;
- (id)chaperoneOrganization;
- (bool)isChaperoned;
- (void)respondToCurrentPasscodeRequestContinue:(bool)arg1 passcode:(id)arg2;
- (void)respondToWarningsContinueInstallation:(bool)arg1;
- (void)__checkForProfiledCrash;
- (void)submitUserInputResponses:(id)arg1;
- (void)cancelUserInputResponses;
- (void)preflightUserInputResponses:(id)arg1 forPayloadIndex:(unsigned long long)arg2;
- (void)updateProfileWithIdentifier:(id)arg1 interactionDelegate:(id)arg2;
- (void)installProfileData:(id)arg1 interactionDelegate:(id)arg2;
- (void)_detectProfiledCrashes;
- (bool)removeProvisioningProfileWithUUID:(id)arg1 outError:(id*)arg2;
- (bool)installProvisioningProfileData:(id)arg1 managingProfileIdentifier:(id)arg2 outError:(id*)arg3;
- (bool)showProfileErrorUIWithProfileIdentifier:(id)arg1 outError:(id*)arg2;
- (bool)transitionToProfileAcceptanceUI;
- (bool)transitionToProfileOverviewUI;
- (id)acceptedFileExtensions;
- (id)acceptedMIMETypes;
- (id)updateProfileWithIdentifier:(id)arg1 outError:(id*)arg2;
- (void)removeProfileAsyncWithIdentifier:(id)arg1;
- (void)removeProfileWithIdentifier:(id)arg1;
- (id)installProfileData:(id)arg1 outError:(id*)arg2;
- (id)queueFileDataForAcceptance:(id)arg1 originalFileName:(id)arg2 forBundleID:(id)arg3 outError:(id*)arg4;
- (id)queueFileDataForAcceptance:(id)arg1 originalFileName:(id)arg2 outError:(id*)arg3;
- (id)popProvisioningProfileDataFromHeadOfInstallationQueue;
- (id)popProfileDataFromHeadOfInstallationQueue;
- (id)installedConfigurationProfileInfoWithOutMDMProfileInfo:(id*)arg1;
- (id)installedProfileIdentifiers;
- (void)installProfileData:(id)arg1 options:(id)arg2 interactionDelegate:(id)arg3;
- (id)installedProfilesWithFilterFlags:(int)arg1;
- (bool)transitionToProfileAcceptanceUIAndReturnToBundleID:(id)arg1;
- (bool)_openSensitiveURLString:(id)arg1 unlock:(bool)arg2;
- (id)installProfileData:(id)arg1 options:(id)arg2 outError:(id*)arg3;
- (id)installedMDMProfileIdentifier;
- (id)installedProfileIdentifiersWithFilterFlags:(int)arg1;
- (id)_queueDataForAcceptance:(id)arg1 originalFileName:(id)arg2 originatingBundleID:(id)arg3 transitionToUI:(bool)arg4 outError:(id*)arg5;
- (id)installedProfileWithIdentifier:(id)arg1;
- (void)removeProfileWithIdentifier:(id)arg1 completion:(id)arg2;
- (void)isProfileInstalledWithIdentifier:(id)arg1 completion:(id)arg2;
- (void)setInteractionDelegate:(id)arg1;
- (id)effectiveWhitelistedAppsAndOptions;
- (void)removeOrphanedClientRestrictions;
- (int)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarningMessage:(id)arg5 complianceBlocking:(int)arg6 displayImmediateAlert:(bool)arg7 outRestrictionChanged:(bool*)arg8 outEffectiveSettingsChanged:(bool*)arg9 outError:(id*)arg10;
- (id)effectiveRestrictions;
- (id)allClientUUIDsForClientType:(id)arg1;
- (id)objectRestrictionForFeature:(id)arg1;
- (id)valueRestrictionForFeature:(id)arg1;
- (int)boolRestrictionForFeature:(id)arg1;
- (bool)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarningMessage:(id)arg5 outRestrictionChanged:(bool*)arg6 outEffectiveSettingsChanged:(bool*)arg7 outError:(id*)arg8;
- (void)setUserInfo:(id)arg1 forClientUUID:(id)arg2;
- (id)userInfoForClientUUID:(id)arg1;
- (id)effectiveValueForSetting:(id)arg1;
- (void)resetAllSettingsToDefaults;
- (void)removeValueSetting:(id)arg1;
- (void)removeBoolSetting:(id)arg1;
- (bool)isUnionSettingLockedDownByRestrictions:(id)arg1;
- (bool)isIntersectionSettingLockedDownByRestrictions:(id)arg1;
- (bool)areSettingsLockedDownByRestrictions:(id)arg1;
- (id)localizedRestrictionSourceDescriptionForFeatures:(id)arg1;
- (id)effectiveValuesForUnionSetting:(id)arg1;
- (id)effectiveValuesForIntersectionSetting:(id)arg1;
- (id)defaultParametersForUnionSetting:(id)arg1;
- (id)defaultParametersForIntersectionSetting:(id)arg1;
- (id)defaultValuesForUnionSetting:(id)arg1;
- (id)defaultValuesForIntersectionSetting:(id)arg1;
- (id)parametersForUnionSetting:(id)arg1;
- (id)parametersForIntersectionSetting:(id)arg1;
- (id)parametersForValueSetting:(id)arg1;
- (id)parametersForBoolSetting:(id)arg1;
- (void)setValues:(id)arg1 forUnionSetting:(id)arg2;
- (void)setValues:(id)arg1 forIntersectionSetting:(id)arg2;
- (void)setValue:(id)arg1 forSetting:(id)arg2;
- (void)setBoolValue:(bool)arg1 forSetting:(id)arg2;
- (void)setParameters:(id)arg1 forValueSetting:(id)arg2;
- (void)setParameters:(id)arg1 forBoolSetting:(id)arg2;
- (id)effectiveUserSettings;
- (bool)isValueSettingLockedDownByRestrictions:(id)arg1;
- (bool)isBoolSettingLockedDownByRestrictions:(id)arg1;
- (bool)_areProfilesRestrictingSettings:(id)arg1 outMDMName:(id*)arg2 outExchangeName:(id*)arg3 outExchangeCount:(long long*)arg4 outProfileName:(id*)arg5 outProfileCount:(long long*)arg6;
- (id)_settingsLockedDownByRestrictions:(id)arg1;
- (bool)isSettingLockedDownByRestrictions:(id)arg1;
- (id)effectiveParametersForIntersectionSetting:(id)arg1;
- (id)effectiveParametersForValueSetting:(id)arg1;
- (id)effectiveParametersForUnionSetting:(id)arg1;
- (id)effectiveParametersForBoolSetting:(id)arg1;
- (id)defaultParametersForValueSetting:(id)arg1;
- (id)defaultParametersForBoolSetting:(id)arg1;
- (int)defaultBoolValueForSetting:(id)arg1;
- (id)userSettings;
- (void)setValue:(id)arg1 forSetting:(id)arg2 passcode:(id)arg3;
- (void)setBoolValue:(bool)arg1 forSetting:(id)arg2 passcode:(id)arg3;
- (void)setParametersForSettingsByType:(id)arg1;
- (void)setParametersForSettingsByType:(id)arg1 passcode:(id)arg2;
- (id)defaultValueForSetting:(id)arg1;
- (int)effectiveBoolValueForSetting:(id)arg1;
- (id)localizedDescriptionOfCurrentPasscodeConstraints;
- (int)unlockScreenType;
- (void)notifyClientsToRecomputeCompliance;
- (void)recomputeUserComplianceWarning;
- (void)getPasscodeComplianceWarningLastLockDate:(id)arg1 completionBlock:(id)arg2;
- (int)getPasscodeComplianceWarningLastLockDate:(id)arg1 outLocalizedTitle:(id*)arg2 outLocalizedMessage:(id*)arg3;
- (bool)currentPasscodeIsCompliantWithProfileRestrictionsOutError:(id*)arg1;
- (bool)currentPasscodeIsCompliantWithGlobalRestrictionsOutError:(id*)arg1;
- (bool)passcode:(id)arg1 meetsCurrentConstraintsOutError:(id*)arg2;
- (bool)isContentProtectionInEffect;
- (bool)clearPasscodeWithEscrowKeybagData:(id)arg1 secret:(id)arg2 outError:(id*)arg3;
- (bool)changePasscodeFrom:(id)arg1 to:(id)arg2 outError:(id*)arg3;
- (void)lockDevice;
- (int)newPasscodeEntryScreenType;
- (int)_getPasscodeComplianceWarningExpiryDate:(id)arg1 lastLockDate:(id)arg2 outLocalizedTitle:(id*)arg3 outLocalizedMessage:(id*)arg4;
- (void)recomputeUserComplianceWarningSynchronously;
- (void)notifyUserHasSeenComplianceMessageWithLastLockDate:(id)arg1;
- (bool)isPasscodeSet;
- (void)lockDeviceImmediately:(bool)arg1;
- (bool)unlockDeviceWithPasscode:(id)arg1 outError:(id*)arg2;
- (id)passcodeExpiryDateOutError:(id*)arg1;
- (bool)isPasscodeRequiredByProfiles;
- (bool)isPasscodeRequired;
- (bool)shouldDestroyOldKeybag;
- (void)setFingerprintUnlockAllowed:(bool)arg1 passcode:(id)arg2 completionBlock:(id)arg3;
- (unsigned long long)gracePeriod;
- (void)setGracePeriod:(unsigned long long)arg1 passcode:(id)arg2 completionBlock:(id)arg3;
- (bool)isMUAllowed;
- (id)activationLockBypassHash;
- (void)deleteActivationLockBypassKey;
- (id)activationLockBypassKey;
- (bool)isSpotlightInternetResultsAllowed;
- (id)appsRestrictedFromCloudSync;
- (bool)isInAppPaymentAllowed;
- (bool)isFingerprintForContactlessPaymentAllowed;
- (bool)isContactlessPaymentAllowed;
- (bool)isUninstalledAppNearMeSuggestionsAllowed;
- (bool)isInstalledAppNearMeSuggestionsAllowed;
- (bool)isPodcastsAllowed;
- (bool)hasAppAnalyticsAllowedBeenSet;
- (bool)isAppAnalyticsAllowed;
- (bool)hasDiagnosticSubmissionAllowedBeenSet;
- (bool)isDiagnosticSubmissionAllowed;
- (bool)isEnterpriseBookMetadataSyncAllowed;
- (bool)isEnterpriseBookBackupAllowed;
- (bool)isActivityContinuationAllowed;
- (bool)isGeotagSharingAllowed;
- (bool)isAirPlayIncomingRequestsPairingPasswordRequired;
- (bool)isAirPlayOutgoingRequestsPairingPasswordRequired;
- (bool)isFingerprintModificationAllowed;
- (bool)isAssistantUserGeneratedContentAllowed;
- (bool)isActivationLockAllowed;
- (bool)isControlCenterAllowedInApps;
- (bool)isLockScreenControlCenterAllowed;
- (bool)isLockScreenTodayViewAllowed;
- (bool)isLockScreenNotificationsViewAllowed;
- (bool)isAirDropAllowed;
- (bool)isAppRatingLimitInEffect;
- (bool)isAppRemovalAllowed;
- (bool)isAppInstallationAllowed;
- (bool)isLockScreenWiFiModificationAllowed;
- (bool)isAdTrackingLimited;
- (bool)isWebContentFilteringInEffect;
- (bool)isWebTextDefineAllowed;
- (bool)isAutomaticAppUpdatesModificationAllowed;
- (void)setAutomaticAppUpdatesAllowed:(bool)arg1;
- (bool)isOTAPKIUpdatesAllowed;
- (bool)isVehicleUIAllowed;
- (bool)isCloudKeychainSyncAllowed;
- (void)migratePostDataMigrator;
- (void)processProfilesPostMigrate;
- (void)processProfilesPostRestore;
- (id)managedMedia;
- (id)managedAppIDs;
- (void)migrateWithContext:(int)arg1 passcodeWasSetInBackup:(bool)arg2;
- (void)setManagedEmailDomains:(id)arg1;
- (id)managedEmailDomains;
- (id)doNotDocumentSyncAppIDs;
- (id)doNotBackupAppIDs;
- (id)managedSystemConfigurationServiceIDs;
- (id)managedWiFiNetworkNames;
- (bool)isFingerprintUnlockAllowed;
- (id)managedAppIDsWithFlags:(int)arg1;
- (void)shutDown;
- (bool)isCloudSyncAllowed:(id)arg1;
- (bool)isAutomaticAppUpdatesAllowed;
- (void)flush;
- (void)rereadManagedAppAttributes;
- (void)storeCertificateData:(id)arg1 forHostIdentifier:(id)arg2;
- (void)removeExpiredProfiles;
- (void)performBootTimeChecks;
- (void)notifyKeybagUpdated;
- (void)notifyDeviceUnlocked;
- (void)checkCarrierProfile;
- (void)checkCarrierProfileForceInstallation:(bool)arg1;
- (id)activationLockBypassKeyCreateNewIfNeeded:(bool)arg1;
- (id)_localizedRestricitionSourceDescriptionFromMDMName:(id)arg1 exchangeName:(id)arg2 exchangeCount:(long long)arg3 profileName:(id)arg4 profileCount:(long long)arg5;
- (void)checkInIfNeeded;
- (void)doMCICDidRequestCurrentPasscodeWithCompletion:(id)arg1;
- (void)doMCICDidRequestShowUserWarnings:(id)arg1 completion:(id)arg2;
- (void)doMCICDidFinishPreflightWithError:(id)arg1 completion:(id)arg2;
- (void)doMCICDidRequestUserInput:(id)arg1 completion:(id)arg2;
- (void)doMCICDidFinishInstallationWithIdentifier:(id)arg1 error:(id)arg2 completion:(id)arg3;
- (void)doMCICDidBeginInstallingNextProfileData:(id)arg1 completion:(id)arg2;
- (void)doMCICDidUpdateStatus:(id)arg1 completion:(id)arg2;
- (void)unstashWebContentFilterAutoPermittedURLStrings;
- (void)stashWebContentFilterAutoPermittedURLStrings;
- (void)unstashWebContentFilterUserBlacklistedURLStrings;
- (void)stashWebContentFilterUserBlacklistedURLStrings;
- (void)removeWebContentFilterUserBlacklistedURLString:(id)arg1;
- (void)setWebContentFilterUserBlacklistedURLStrings:(id)arg1;
- (id)webContentFilterEffectiveBlacklistedURLStrings;
- (id)webContentFilterUserBlacklistedURLStrings;
- (void)addUserBookmark:(id)arg1;
- (void)addWebContentFilterAutoPermittedURLString:(id)arg1;
- (void)setWebContentFilterAutoPermittedURLStrings:(id)arg1;
- (bool)isWebFilterUIActive;
- (id)defaultUserBookmarks;
- (void)unstashUserBookmarksFromLabel:(id)arg1;
- (void)stashUserBookmarksWithLabel:(id)arg1 newUserBookmarks:(id)arg2;
- (id)userBookmarks;
- (void)setUserBookmarks:(id)arg1;
- (void)lockdownDidReceiveActivationRecord:(id)arg1;
- (int)hostMayPairWithOptions:(id)arg1 challenge:(id)arg2;
- (id)autonomousSingleAppModePermittedBundleIDs;
- (void)parentalControlsSetAllowPasscodeAccessToNonWhitelistedApps:(bool)arg1;
- (bool)parentalControlsAllowPasscodeAccessToNonWhitelistedApps;
- (bool)isParentalControlsAllowPasscodeAccessToNonWhitelistedAppsUIForcedByRestrictions;
- (void)setParentalControlsWhitelistedAppBundleIDs:(id)arg1;
- (id)parentalControlsWhitelistedAppBundleIDs;
- (id)parentalControlsAvailableAppBundleIDsForWhitelisting;
- (bool)mayEnterPasscodeToAccessNonWhitelistedApps;
- (bool)isPasscodeRequiredToAccessWhitelistedApps;
- (bool)isInSingleAppMode;
- (id)effectiveWhitelistedAppBundleIDs;
- (int)appWhitelistState;
- (id)knownAirPrintIPPURLStrings;
- (bool)isTeslaCloudConfigurationAvailable;
- (void)setupAssistantDidFinish;
- (bool)shouldInstallStoredProfileForPurpose:(int)arg1;
- (void)storeProfileData:(id)arg1 configurationSource:(int)arg2 purpose:(int)arg3;
- (void)installProfileDataStoredForPurpose:(int)arg1 completionBlock:(id)arg2;
- (bool)shouldShowCloudConfigurationUI;
- (bool)shouldSkipSetupPanes;
- (void)storeCloudConfigurationDetails:(id)arg1;
- (void)cloudConfigurationUIDidCompleteWasApplied:(bool)arg1;
- (bool)wasTeslaCloudConfigurationApplied;
- (bool)wasCloudConfigurationApplied;
- (void)retrieveCloudConfigurationFromURL:(id)arg1 username:(id)arg2 password:(id)arg3 anchorCertificates:(id)arg4 completionBlock:(id)arg5;
- (void)retrieveAndStoreCloudConfigurationDetailsCompletionBlock:(id)arg1;
- (void)profileDataStoredForPurpose:(int)arg1 completionBlock:(id)arg2;
- (void)markStoredProfileForPurposeAsInstalled:(int)arg1;
- (bool)activationRecordIndicatesCloudConfigurationIsAvailable;
- (void)retrieveCloudConfigurationDetailsCompletionBlock:(id)arg1;
- (void)storeCloudConfigurationDetails:(id)arg1 completion:(id)arg2;
- (id)cloudConfigurationDetails;
- (bool)isSupervised;
- (id)filteredOpenInAccounts:(id)arg1 originatingAppBundleID:(id)arg2 sourceAccountManagement:(int)arg3;
- (id)filteredMailSheetAccountsForBundleID:(id)arg1 sourceAccountManagement:(int)arg2;
- (bool)mayShowLocalAccountsForBundleID:(id)arg1 sourceAccountManagement:(int)arg2;
- (bool)isAppManaged:(id)arg1;
- (bool)shouldApplyFilterForBundleID:(id)arg1 sourceAccountManagement:(int)arg2 outAllowManagedAccounts:(bool*)arg3 outAllowUnmanagedAccounts:(bool*)arg4;
- (id)allowedImportFromAppBundleIDsAfterApplyingFilterToBundleIDs:(id)arg1 importingAppBundleID:(id)arg2 importingAccountIsManaged:(bool)arg3;
- (bool)isOpenInRestrictionInEffect;
- (bool)mayOpenFromUnmanagedToManaged;
- (bool)mayOpenFromManagedToUnmanaged;
- (bool)isURLManaged:(id)arg1;
- (id)allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs:(id)arg1 originatingAppBundleID:(id)arg2 originatingAccountIsManaged:(bool)arg3;
- (bool)mayShareToMessagesOriginatingAccountIsManaged:(bool)arg1;
- (void)allowedKeyboardBundleIDsAfterApplyingFilterToBundleIDs:(id)arg1 hostAppBundleID:(id)arg2 accountIsManaged:(bool)arg3 completion:(id)arg4;
- (id)allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:(id)arg1 localAppBundleID:(id)arg2 localAccountIsManaged:(bool)arg3;

@end
