/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 */

@class NSString, NSDateFormatter, NSMutableSet, NSObject<OS_dispatch_queue>, NSMutableArray, <BSFileLoggerDelegate>;

@interface BSFileLogger : NSObject <BSLogging> {
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_logPath;
    NSMutableArray *_recentLogs;
    NSMutableSet *_enabledCategories;
    NSDateFormatter *_memoryLogDateFormatter;
    bool_enabledByPreference;
    <BSFileLoggerDelegate> *_delegate;
}

@property(readonly) NSString * name;
@property(getter=isEnabled,readonly) bool enabled;
@property(retain,readonly) NSObject<OS_dispatch_queue> * queue;
@property(readonly) NSString * logPath;
@property(readonly) unsigned long long logDestinations;
@property(readonly) int maxLogCount;
@property(readonly) int maxLogSize;
@property(readonly) unsigned long long maxLogLinesInMemory;
@property(readonly) NSString * logPreferenceDomain;
@property(readonly) NSString * logPreferenceName;
@property(readonly) bool shouldEnableOnInternalBuilds;
@property <BSFileLoggerDelegate> * delegate;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (bool)saveRecentLogsToTemporaryPath:(id*)arg1;
- (id)recentLogs;
- (bool)shouldEnableOnInternalBuilds;
- (void)willBeginLoggingToPath:(id)arg1;
- (unsigned long long)logDestinations;
- (id)logPrefixForCategory:(id)arg1 destination:(unsigned long long)arg2;
- (int)maxLogSize;
- (int)maxLogCount;
- (void)reloadFromDefaults;
- (void)_enableLogCategory:(id)arg1;
- (id)loggerForCatagory:(id)arg1;
- (id)logPreferenceDomain;
- (id)logPreferenceName;
- (id)queue;
- (void)_disableLogCategory:(id)arg1;
- (id)logPath;
- (bool)isEnabledForCategory:(id)arg1;
- (void)_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(char *)arg3;
- (unsigned long long)maxLogLinesInMemory;
- (id)composedLogForCategory:(id)arg1 destination:(unsigned long long)arg2 format:(id)arg3 arguments:(char *)arg4;
- (void)_queue_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(char *)arg3;
- (void)_setEnabled:(bool)arg1 fromDefaults:(bool)arg2;
- (bool)_queue_isEnabledForCategory:(id)arg1;
- (void)logWithFormat:(id)arg1;
- (void)logWithFormat:(id)arg1 arguments:(char *)arg2;
- (void)_setEnabled:(bool)arg1;
- (bool)isEnabled;
- (id)name;
- (id)delegate;
- (id)init;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end
