/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@class BWPixelBufferPool;

@interface BWPixelTransferNode : BWNode  {
    int _cropMode;
    int _liveCropMode;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _inputCropRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _liveInputCropRect;
    bool_haveLiveInputCropRect;
    bool_passesBuffersThroughWhenPossible;
    bool_livePassesBuffersThroughWhenPossible;
    int _rotationDegrees;
    int _liveRotationDegrees;
    bool_flipHorizontal;
    bool_liveFlipHorizontal;
    bool_flipVertical;
    bool_liveFlipVertical;
    bool_liveZeroFillBuffers;
    bool_lowSpeed;
    bool_liveLowSpeed;
    unsigned long long _outputWidth;
    unsigned long long _outputHeight;
    unsigned int _outputPixelFormat;
    struct OpaqueVTImageRotationSession { } *_rotationSession;
    int _rotationSessionRotationDegrees;
    bool_rotationSessionFlipHorizontal;
    bool_rotationSessionFlipVertical;
    bool_rotationSessionZeroFillBuffers;
    bool_rotationSessionLowSpeed;
    struct OpaqueVTPixelTransferSession { } *_transferSession;
    BWPixelBufferPool *_intermediateBufferPool;
    struct { 
        int width; 
        int height; 
    } _intermediatePoolDimensions;
    struct opaqueCMFormatDescription { } *_outputFormatDescription;
    bool_makeCurrentConfigurationLiveOnNextRenderCallback;
}

+ (void)initialize;

- (bool)lowSpeed;
- (bool)flipVertical;
- (bool)flipHorizontal;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inputCropRect;
- (int)cropMode;
- (id)_preferredPixelFormatsWithInputPixelFormatFirst;
- (id)_preferredPixelFormats;
- (void)_ensureRotationSession;
- (void)_ensureTransferSession;
- (int)_ensureIntermediatePoolWithDimensions:(struct { int x1; int x2; })arg1;
- (struct { int x1; int x2; })_intermediateBufferDimensionsForInputDimensions:(struct { int x1; int x2; })arg1 outputDimensions:(struct { int x1; int x2; })arg2;
- (bool)_emitIfMarkerBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_makeCurrentConfigurationLive;
- (bool)_zeroFillBuffers;
- (void)_updateOutputRequirements;
- (bool)hasNonLiveConfigurationChanges;
- (void)makeCurrentConfigurationLive;
- (void)setLowSpeed:(bool)arg1;
- (void)setInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned int)outputPixelFormat;
- (void)setFlipVertical:(bool)arg1;
- (void)setFlipHorizontal:(bool)arg1;
- (void)setRotationDegrees:(int)arg1;
- (void)setOutputPixelFormat:(unsigned int)arg1;
- (void)setCropMode:(int)arg1;
- (bool)passesBuffersThroughWhenPossible;
- (void)setPassesBuffersThroughWhenPossible:(bool)arg1;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (id)nodeSubType;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (id)nodeType;
- (int)rotationDegrees;
- (id)init;
- (void)dealloc;
- (unsigned long long)outputHeight;
- (unsigned long long)outputWidth;
- (void)setOutputHeight:(unsigned long long)arg1;
- (void)setOutputWidth:(unsigned long long)arg1;

@end
