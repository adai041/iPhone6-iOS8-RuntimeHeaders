/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSMutableDictionary, FigCaptureThermalMonitor, BWStillImageTimeMachine, NSDictionary, NSMutableArray, NSObject<OS_dispatch_group>, <BWFigVideoDeviceStillImageCaptureDelegate>, NSString, BWZoomCommandHandler, NSObject<OS_dispatch_queue>, NSArray, NSData, BWDeviceMotionActivityDetector;

@interface BWFigVideoCaptureDevice : BWCaptureDevice <BWZoomCompletionDelegate> {
    struct OpaqueFigCaptureDevice { } *_device;
    struct OpaqueFigCaptureStream { } *_stream;
    bool_usingMultipleStreamOutputs;
    struct OpaqueCMClock { } *_clock;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    struct opaqueCMBufferQueue { } *_streamQueue;
    struct opaqueCMBufferQueueTriggerToken { } *_streamQueueTriggerToken;
    NSObject<OS_dispatch_queue> *_bufferServicingQueue;
    NSObject<OS_dispatch_queue> *_zoomUpdateQueue;
    struct opaqueCMBufferQueue { } *_stillImageQueue;
    struct opaqueCMBufferQueueTriggerToken { } *_stillImageQueueTriggerToken;
    NSObject<OS_dispatch_queue> *_stillImageServicingQueue;
    bool_streaming;
    NSDictionary *_supportedProperties;
    NSArray *_supportedFormats;
    long long _activeFormatIndex;
    bool_fullRangeVideo;
    int _minimumFrameRate;
    int _maximumFrameRate;
    struct __CFString { } *_portType;
    int _position;
    NSDictionary *_attributes;
    int _clientRetainedBufferCountHint;
    NSMutableArray *_streamingClientCallbacks;
    NSMutableArray *_stillImageClientCallbacks;
    bool_deferMetadataDictionaryCreation;
    int (*_createAutofocusSampleBufferProcessorFunction)();
    NSObject<OS_dispatch_queue> *_autofocusProcessorQueue;
    NSMutableDictionary *_autofocusCachedPropertiesDictionary;
    struct OpaqueFigSimpleMutex { } *_autofocusStatusMutex;
    struct OpaqueFigSampleBufferProcessor { } *_autofocusProcessor;
    bool_allowAEStableNotifications;
    bool_aeStable;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _aeRequestTime;
    int _aeRequestCount;
    int _aeFrameWaitCount;
    bool_allowAWBStableNotifications;
    bool_awbStable;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _cachedFocusRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _cachedExposureRect;
    bool_useAutoImageControlMode;
    int _autoImageControlMode;
    int _currentImageControlMode;
    bool_faceDetectionMetadataRequested;
    NSDictionary *_faceDetectionConfiguration;
    bool_faceDetectionEnabled;
    int _frameStatisticsLock;
    struct { 
        double integrationTime; 
        float normalizedSNR; 
        float baseISO; 
        double exposureBias; 
        float gain; 
        unsigned int conversionGain; 
        unsigned int readNoise_1x; 
        unsigned int readNoise_8x; 
        unsigned int aeAvg; 
        unsigned int motionDataStatus; 
        long long frameCount; 
    } _currentFrameStatistics;
    bool_hasFlash;
    bool_autoFlashEnabled;
    bool_flashActive;
    float _stillImageStabilizationIntegrationTimeThreshold;
    bool_stillImageStabilizationAutomaticallyEnabled;
    struct OpaqueFigSimpleMutex { } *_torchLock;
    bool_autoTorchEnabled;
    bool_autoTorchStatsCheckedForVideoRecording;
    bool_torchActive;
    float _torchLevel;
    FigCaptureThermalMonitor *_thermalMonitor;
    bool_hdrSceneDetectionEnabled;
    bool_hdrScene;
    int _lowLightBoostLock;
    bool_lowLightBoostSupportedForFormat;
    bool_lowLightBoostActive;
    bool_stillImageCaptureEnabled;
    bool_timeMachineEnabledForMultistream;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _stillImageBufferTimeMachineHandler;

    int _timeMachineCapacity;
    BWStillImageTimeMachine *_timeMachine;
    NSObject<OS_dispatch_queue> *_stillImageDispatchQueue;
    <BWFigVideoDeviceStillImageCaptureDelegate> *_stillImageCaptureDelegate;
    NSObject<OS_dispatch_group> *_stillImageCaptureDelegateDispatchGroup;
    int _expectedImagesForCaptureStillImageNow;
    int _receivedImagesForCaptureStillImageNow;
    int _skippedFramesCountForAF;
    int _stillImageCaptureLock;
    bool_grabNextFrame;
    bool_retryCaptureStillImageNow;
    bool_retryCaptureUsesFlash;
    NSMutableDictionary *_retryStillImageCaptureOptions;
    int _currentManualFocusCompletedID;
    int _currentManualExposureCompletedID;
    int _currentBiasedExposureCompletedID;
    int _currentManualWhiteBalanceCompletedID;
    NSMutableDictionary *_observedProperties;
    struct OpaqueFigSimpleMutex { } *_manualPropertyMutex;
    float _lensPosition;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _exposureDuration;
    float _ISO;
    float _exposureTargetBias;
    float _exposureTargetOffset;
    struct { 
        float redGain; 
        float greenGain; 
        float blueGain; 
    } _deviceWhiteBalanceGains;
    struct { 
        float redGain; 
        float greenGain; 
        float blueGain; 
    } _grayWorldWhiteBalanceGains;
    NSObject<OS_dispatch_queue> *_whiteBalanceGainsQueue;
    NSMutableDictionary *_whiteBalanceGains;
    NSMutableArray *_whiteBalanceGainsOrderedKeys;
    int _whiteBalanceModeForExif;
    BWZoomCommandHandler *_zoomCommandHandler;
    float _maxISPZoomFactor;
    struct { 
        int width; 
        int height; 
    } _ispOutputDimensions;
    struct { 
        int width; 
        int height; 
    } _maxISPCropDimensions;
    struct { 
        int width; 
        int height; 
    } _lastISPCropDimensions;
    struct CGSize { 
        double width; 
        double height; 
    } _overscanPercentage;
    int _tccLock;
    bool_clientProcessHasAccessToCamera;
    NSData *_auditTokenData;
    bool_feature1Enabled;
    NSObject<OS_dispatch_queue> *_feature1ProcessorQueue;
    struct OpaqueFigSampleBufferProcessor { } *_feature1Processor;
    bool_hasSphere;
    int _sphereLock;
    bool_enableSphereWhenAvailable;
    bool_sphereEnabled;
    bool_motionDataInvalid;
    BWDeviceMotionActivityDetector *_deviceMotionActivityDetector;
}

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (struct __CFString { }*)_autofocusProcessorImageControlModeFromImageControlMode:(int)arg1;
+ (int)setupVibeHandlingIfRequired;
+ (void)initialize;

- (struct OpaqueCMClock { }*)clock;
- (struct OpaqueFigCaptureStream { }*)stream;
- (bool)enableSphereWhenAvailable;
- (float)stillImageStabilizationIntegrationTimeThreshold;
- (void)_serviceAutoTorchNotification;
- (id)stillImageBufferTimeMachineHandler;
- (bool)timeMachineEnabledForMultistream;
- (id)stillImageCaptureDelegate;
- (bool)stillImageCaptureEnabled;
- (void)_serviceCompletedRequestNotifications:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_servicePropertyChangeNotifications:(struct opaqueCMSampleBuffer { }*)arg1;
- (bool)usesFullRangeVideo;
- (int)clientRetainedBufferCountHint;
- (long long)activeFormatIndex;
- (int)_copyAutofocusProcessorProperty:(struct __CFString { }*)arg1 propertyValueOut:(void*)arg2;
- (int)maximumFrameRate;
- (int)minimumFrameRate;
- (float)_ispAppliedZoomFromSampleBufferMetadataDictionary:(id)arg1;
- (void)_updateISPCropForZoomFactor:(float)arg1;
- (int)_updateExposureRectIfNeededForZoomFactor:(float)arg1;
- (int)_updateAutoFocusRectIfNeededForZoomFactor:(float)arg1;
- (int)_setAutofocusProcessorImageControlModeProperty:(int)arg1;
- (int)_setAutofocusProcessorProperty:(struct __CFString { }*)arg1 propertyValue:(void*)arg2;
- (void)_addExifWhiteBalanceMetadata:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_addFeature1ToMetadata:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_addAutofocusAndDiagnosticMetadata:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)_captureStillImageNowOnStreamWithOptions:(id)arg1 flashMode:(bool)arg2;
- (void)_emitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 fromTimeMachine:(bool)arg2;
- (void)_resetCaptureRequestState;
- (bool)_shouldUseSphereForStillImageCapture:(double)arg1;
- (void)_handleStillImageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_captureStillImageBracketNow:(int)arg1 bracketSettings:(id)arg2;
- (void)_captureStillImageWithFlashNow;
- (void)_captureStillImageNow;
- (bool)_unprepareStillImageQueue;
- (bool)_prepareStillImageQueue;
- (void)_postManualControlRequestCompletedWithName:(id)arg1 requestID:(int)arg2 timeDictionary:(id)arg3 additionalPayloadItems:(id)arg4;
- (bool)isPropertyObserved:(id)arg1;
- (void)_emitVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_updateMotionDataStatus:(struct opaqueCMSampleBuffer { }*)arg1;
- (bool)isSphereEnabled;
- (void)_serviceZoomForSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 updateISPZoom:(bool)arg2;
- (void)_teardownFeature1SampleBufferProcessor;
- (void)_teardownAutoFocusSampleBufferProcessor;
- (void)_serviceLowLightBoostActiveNotification:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)_setupFeature1SampleBufferProcessor;
- (int)_setupAutofocusSampleBufferProcessor;
- (void)_addCaptureStreamAttachments:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_handleVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_updateZoomCapabilitiesForActiveFormatIndex:(long long)arg1;
- (void)_didStartStreaming;
- (void)_didStopStreaming;
- (void)_willStartStreaming;
- (bool)_prepareStreamQueue;
- (int)_setAutofocusProcessorPropertyInternal:(struct __CFString { }*)arg1 propertyValue:(void*)arg2;
- (int)_copyAutofocusProcessorPropertyInternal:(struct __CFString { }*)arg1 propertyValueOut:(void*)arg2;
- (void)_postNotificationWithPayload:(id)arg1 notificationPayload:(id)arg2;
- (void)_updateFaceDetectionStateForAutofocusProperty:(struct __CFString { }*)arg1 propertyValue:(void*)arg2;
- (void)_updateWhiteBalanceStateForAutofocusProperty:(struct __CFString { }*)arg1 propertyValue:(void*)arg2;
- (void)_updateExposureStateForAutofocusProperty:(struct __CFString { }*)arg1;
- (void)_updateImageControlModeStateForAutofocusProperty:(struct __CFString { }*)arg1 propertyValue:(void*)arg2;
- (int)_updateFaceDetectionConfigurationOnStream:(id)arg1;
- (void)_setFaceDetectionEnabled:(bool)arg1;
- (void)_updateSphereMode;
- (bool)_unprepareStreamQueue;
- (id)_initWithFigCaptureDeviceRef:(struct OpaqueFigCaptureDevice { }*)arg1 figCaptureStreamRef:(struct OpaqueFigCaptureStream { }*)arg2 attributes:(id)arg3 createAutofocusSampleBufferProcessorFunction:(int (*)())arg4;
- (void)drainNotifications;
- (id)initWithPosition:(int)arg1 attributes:(id)arg2;
- (int)setFocusModeManualWithLensPosition:(float)arg1 requestID:(int)arg2;
- (int)setFocusModeAutoWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 continuous:(bool)arg2 smooth:(bool)arg3 rangeRestrictionNear:(float)arg4 rangeRestrictionFar:(float)arg5;
- (int)setExposureModeCustomWithExposureDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 minFrameRate:(double)arg2 maxFrameRate:(double)arg3 ISO:(float)arg4 requestID:(int)arg5;
- (int)setExposureModeLocked;
- (int)setExposureModeAutoWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)setExposureTargetBias:(float)arg1 requestID:(int)arg2;
- (int)setWhiteBalanceModeLockedWithGains:(struct { float x1; float x2; float x3; })arg1 requestID:(int)arg2;
- (int)setWhiteBalanceModeAuto;
- (void)setClientAuditTokenData:(id)arg1;
- (void)setStillImageStabilizationAutomaticallyEnabled:(bool)arg1;
- (bool)setHDRSceneDetectionEnabled:(bool)arg1 error:(id*)arg2;
- (int)setFaceDetectionDrivenImageProcessingMode:(int)arg1;
- (int)setAutomaticallyAdjustsTorch:(bool)arg1;
- (int)setTorchLevel:(float)arg1;
- (bool)setAutoFlashEnabled:(bool)arg1 error:(id*)arg2;
- (void)setProperty:(id)arg1 isObserved:(bool)arg2;
- (void)checkTCCAccess;
- (void)sourceNodeWillEmitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)sourceNodeWillEmitVideoPreviewSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)sourceNodeWillEmitVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)sourceNodeWillDiscardVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)timeMachineCapacity;
- (void)sourceNodeDidStartStreaming;
- (void)sourceNodeDidStopStreaming;
- (void)sourceNodeWillStartStreaming;
- (void)setStillImageBufferTimeMachineHandler:(id)arg1;
- (void)setTimeMachineEnabledForMultistream:(bool)arg1;
- (id)zoomCommandHandler;
- (id)streamSupportedProperties;
- (void)rampToVideoZoomFactor:(float)arg1 withRate:(float)arg2 commandID:(int)arg3;
- (void)zoomCommandHandler:(id)arg1 didApplyZoomFactor:(float)arg2 rampComplete:(bool)arg3 rampCommandID:(int)arg4;
- (int)setAlternateOutputSizeAndCrop:(id)arg1;
- (void)disposeFigCaptureDevice;
- (id)bufferServicingQueue;
- (void)setUsesFullRangeVideo:(bool)arg1;
- (void)setActiveFormatIndex:(long long)arg1;
- (int)setLowLightBoostAutomaticallyEnabled:(bool)arg1 supportedForFormat:(bool)arg2;
- (void)setMaximumFrameRate:(int)arg1;
- (void)setMinimumFrameRate:(int)arg1;
- (id)supportedFormats;
- (void)registerForFaceDetectionMetadata;
- (bool)unregisterStillImageBufferHandler:(id)arg1 error:(id*)arg2;
- (bool)stopStreamingToSampleBufferHandler:(id)arg1 error:(id*)arg2;
- (bool)registerStillImageBufferHandler:(id)arg1 error:(id*)arg2;
- (bool)startStreamingToSampleBufferHandler:(id)arg1 error:(id*)arg2;
- (void)setClientRetainedBufferCountHint:(int)arg1;
- (int)lowLightCompensationModeForStatistics:(struct { double x1; float x2; float x3; double x4; float x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; long long x11; }*)arg1;
- (void)getCurrentVideoFrameStatistics:(struct { double x1; float x2; float x3; double x4; float x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; long long x11; }*)arg1;
- (void)captureStillImageBracketNow:(int)arg1 bracketSettings:(id)arg2;
- (void)captureStillImageWithFlashNow;
- (void)captureStillImageNow;
- (void)setStillImageCaptureDelegate:(id)arg1;
- (void)setEnableSphereWhenAvailable:(bool)arg1;
- (void)setOverscanPercentage:(struct CGSize { double x1; double x2; })arg1;
- (void)registerForAEMatrixMetadata;
- (void)setStillImageStabilizationIntegrationTimeThreshold:(float)arg1;
- (id)cameraTuningParametersDictionary;
- (id)moduleInfo;
- (id)sensorIDDictionary;
- (void)setStillImageCaptureEnabled:(bool)arg1;
- (void)unregisterForFaceDetectionMetadata;
- (void)unregisterForAEMatrixMetadata;
- (int)setAutoImageControlMode:(int)arg1;
- (int)autoImageControlMode;
- (bool)isStreaming;
- (int)position;
- (void)dealloc;
- (float)zoomFactor;
- (void)setZoomFactor:(float)arg1;
- (void)setFaceDetectionConfiguration:(id)arg1;
- (int)setImageControlMode:(int)arg1;
- (int)setAutomaticallyAdjustsImageControlMode:(bool)arg1;
- (struct { float x1; float x2; float x3; })grayWorldDeviceWhiteBalanceGains;
- (struct { float x1; float x2; float x3; })deviceWhiteBalanceGains;
- (float)exposureTargetBias;
- (float)exposureTargetOffset;
- (float)ISO;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })exposureDuration;
- (float)lensPosition;
- (int)setProvidesStortorgetMetadata:(bool)arg1;
- (int)setSubjectAreaChangeMonitoringEnabled:(bool)arg1;

@end
