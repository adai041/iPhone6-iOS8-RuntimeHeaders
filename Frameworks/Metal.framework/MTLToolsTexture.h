/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@class MTLToolsPointerArray, NSString, <MTLDevice>, <MTLResource>, MTLResourceAllocationInfo;

@interface MTLToolsTexture : MTLToolsResource <MTLTextureImplementation> {
    MTLToolsPointerArray *_views;
}

@property(readonly) MTLToolsPointerArray * views;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(copy) NSString * label;
@property(readonly) <MTLDevice> * device;
@property(readonly) unsigned long long cpuCacheMode;
@property(readonly) <MTLResource> * rootResource;
@property(readonly) unsigned long long textureType;
@property(readonly) unsigned long long pixelFormat;
@property(readonly) unsigned long long width;
@property(readonly) unsigned long long height;
@property(readonly) unsigned long long depth;
@property(readonly) unsigned long long mipmapLevelCount;
@property(readonly) unsigned long long sampleCount;
@property(readonly) unsigned long long arrayLength;
@property(getter=isFramebufferOnly,readonly) bool framebufferOnly;
@property int responsibleProcess;
@property(readonly) MTLResourceAllocationInfo * sharedAllocationInfo;
@property(readonly) MTLResourceAllocationInfo * cachedAllocationInfo;
@property(readonly) struct __IOSurface { }* iosurface;
@property(readonly) unsigned long long iosurfacePlane;
@property(readonly) unsigned long long rotation;
@property(readonly) unsigned long long numFaces;
@property(readonly) bool isDrawable;


- (id)views;
- (unsigned long long)depth;
- (unsigned long long)numFaces;
- (unsigned long long)pixelFormat;
- (void).cxx_destruct;
- (unsigned long long)rotation;
- (unsigned long long)height;
- (unsigned long long)width;
- (unsigned long long)sampleCount;
- (unsigned long long)iosurfacePlane;
- (struct __IOSurface { }*)iosurface;
- (void)copyFromPixels:(const void*)arg1 rowBytes:(unsigned long long)arg2 imageBytes:(unsigned long long)arg3 toSlice:(unsigned long long)arg4 mipmapLevel:(unsigned long long)arg5 origin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg6 size:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg7;
- (void)copyFromSlice:(unsigned long long)arg1 mipmapLevel:(unsigned long long)arg2 origin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg3 size:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg4 toPixels:(void*)arg5 rowBytes:(unsigned long long)arg6 imageBytes:(unsigned long long)arg7;
- (bool)isDrawable;
- (bool)isFramebufferOnly;
- (unsigned long long)arrayLength;
- (unsigned long long)mipmapLevelCount;
- (unsigned long long)textureType;
- (id)rootResource;
- (id)newTextureViewWithPixelFormat:(unsigned long long)arg1;
- (void)replaceRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 mipmapLevel:(unsigned long long)arg2 withBytes:(const void*)arg3 bytesPerRow:(unsigned long long)arg4;
- (void)getBytes:(void*)arg1 bytesPerRow:(unsigned long long)arg2 fromRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg3 mipmapLevel:(unsigned long long)arg4;
- (void)replaceRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 mipmapLevel:(unsigned long long)arg2 slice:(unsigned long long)arg3 withBytes:(const void*)arg4 bytesPerRow:(unsigned long long)arg5 bytesPerImage:(unsigned long long)arg6;
- (void)getBytes:(void*)arg1 bytesPerRow:(unsigned long long)arg2 bytesPerImage:(unsigned long long)arg3 fromRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg4 mipmapLevel:(unsigned long long)arg5 slice:(unsigned long long)arg6;
- (id)initWithBaseObject:(id)arg1 parent:(id)arg2;
- (void)acceptVisitor:(id)arg1;

@end
