/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSURLRequest, NSURLSession, NSMutableURLRequest;

@interface CONNECTION_SessionTask : NSObject  {
    struct _CFURLRequest { } *_originalRequest;
    struct _CFURLRequest { } *_currentRequest;
    struct __CFDictionary { } *_connectionProperties;
    struct __CFDictionary { } *_socketProperties;
    NSMutableURLRequest *_nsCurrentRequest;
    NSURLRequest *_nsOriginalRequest;
    NSURLSession *_session;
    bool_is_cellular;
    Class _my_protocolForTask;
}


- (id)workQueue;
- (id)error;
- (id)taskIdentifier;
- (id)currentRequest;
- (id)originalRequest;
- (id)countOfBytesReceived;
- (id)session;
- (id)startTime;
- (float)priority;
- (id)state;
- (void)dealloc;
- (id)_disallowCellular;
- (id)_boundInterfaceIdentifier;
- (id)_networkServiceType;
- (id)_allowsCellular;
- (id)_contentDispositionFallbackArray;
- (struct __CFDictionary { }*)_additionalHeaders;
- (id)_cookieAcceptPolicy;
- (id)_shouldHandleCookies;
- (id)_cfCookies;
- (id)_cfCreds;
- (id)_cfHSTS;
- (void)_initializeTimingDataWithSessionConfiguration:(id)arg1;
- (struct __CFURL { }*)originalRequest_mainDocumentURL;
- (bool)_shouldSkipPreferredClientCertificateLookup;
- (void)_releasePreventIdleSleepAssertionIfAppropriate;
- (void)_setConnectionIsCellular:(bool)arg1;
- (void)_takePreventIdleSleepAssertionIfAppropriate;
- (id)_timeWindowDuration;
- (id)_timeWindowDelay;
- (id)_expectedWorkload;
- (unsigned char)_preventsIdleSystemSleep;
- (long long)_suspensionThreshhold;
- (id)_connectionPropertyDuet;
- (unsigned char)_strictContentLength;
- (id)_prohibitAuthUI;
- (unsigned long long)_allowedProtocolTypes;
- (long long)_requestPriority;
- (unsigned char)_shouldSkipPipelineProbe;
- (unsigned char)_shouldUsePipelineHeuristics;
- (unsigned char)_shouldPipelineHTTP;
- (struct __CFDictionary { }*)_sslSettings;
- (struct __CFDictionary { }*)_proxySettings;
- (double)_timeoutInterval;
- (int)_cachePolicy;
- (struct __CFHTTPMessage { }*)_copyHTTPMessage;
- (void)_setSocketProperties:(struct __CFDictionary { }*)arg1 connectionProperties:(struct __CFDictionary { }*)arg2;
- (id)_performanceTiming;
- (struct __CFDictionary { }*)_copySocketStreamProperties;
- (struct _CFURLRequest { }*)_copyOriginalCFURLRequest;
- (struct _CFURLRequest { }*)_copyCurrentCFURLRequest;
- (void)cleanupAndBreakCycles;
- (id)_backgroundTaskTimingData;
- (id)_cfCache;
- (id)countOfBytesExpectedToSend;
- (id)countOfBytesSent;
- (id)countOfBytesExpectedToReceive;
- (struct __CFURL { }*)currentRequest_URL;
- (id)_priorityValue;
- (struct _CFHSTSPolicy { }*)_copyHSTSPolicy;
- (void)set_protocolForTask:(id)arg1;
- (id)_protocolForTask;
- (bool)shouldHandleCookiesAndSchemeIsAppropriate;
- (struct _CFURLRequest { }*)_currentCFURLRequest;
- (id)initWithRequest:(struct _CFURLRequest { }*)arg1 mutableCurrent:(struct _CFURLRequest { }*)arg2 connProps:(struct __CFDictionary { }*)arg3 sockProps:(struct __CFDictionary { }*)arg4 session:(id)arg5;
- (const struct XURLCache { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXURLCache;
- (const struct XCredentialStorage { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXCredentialStorage;
- (const struct XCookieStorage { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXCookieStorage;
- (void)updateCurrentRequest:(id)arg1;

@end
