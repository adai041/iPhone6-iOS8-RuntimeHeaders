/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@class NSString, NSArray, NSURL, NSError, AVAssetWriterHelper, AVAssetWriterInternal;

@interface AVAssetWriter : NSObject  {
    AVAssetWriterInternal *_internal;
}

@property(copy,readonly) NSURL * outputURL;
@property(copy,readonly) NSString * outputFileType;
@property(readonly) NSArray * availableMediaTypes;
@property(readonly) long long status;
@property(readonly) NSError * error;
@property(copy) NSArray * metadata;
@property bool shouldOptimizeForNetworkUse;
@property(copy) NSURL * directoryForTemporaryFiles;
@property(readonly) NSArray * inputs;
@property(getter=_helper,retain,readonly) AVAssetWriterHelper * helper;

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)assetWriterWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3;
+ (id)_errorForOSStatus:(int)arg1;

- (void)finalize;
- (void)setShouldOptimizeForNetworkUse:(bool)arg1;
- (id)error;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (id)metadata;
- (void)setMetadata:(id)arg1;
- (bool)startWriting;
- (long long)status;
- (id)description;
- (id)init;
- (void)dealloc;
- (id)_helper;
- (void)_transitionToFailedStatusWithError:(id)arg1;
- (bool)_supportsSampleReferencesReturningError:(id*)arg1;
- (bool)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2;
- (void)finishWritingWithCompletionHandler:(id)arg1;
- (bool)finishWriting;
- (void)cancelWriting;
- (void)endSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)startSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)addInputGroup:(id)arg1;
- (bool)canAddInputGroup:(id)arg1;
- (void)addInput:(id)arg1;
- (bool)canAddInput:(id)arg1;
- (bool)canApplyOutputSettings:(id)arg1 forMediaType:(id)arg2;
- (id)availableMediaTypes;
- (bool)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2 withBlock:(id)arg3;
- (id)outputFileType;
- (id)outputURL;
- (id)initWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3;
- (id)inputGroups;
- (void)setPreferredRate:(float)arg1;
- (void)setMovieTimeScale:(int)arg1;
- (int)movieTimeScale;
- (void)setDirectoryForTemporaryFiles:(id)arg1;
- (id)directoryForTemporaryFiles;
- (bool)shouldOptimizeForNetworkUse;
- (void)setMovieFragmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })movieFragmentInterval;
- (void)setPreferredVolume:(float)arg1;
- (void)setPreferredTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (float)preferredVolume;
- (float)preferredRate;
- (id)inputs;

@end
