/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@class AVAssetWriterInput, NSString, NSDictionary, NSArray;

@interface AVAssetWriterInputSelectionOption : AVMediaSelectionOption  {
    AVAssetWriterInput *_input;
    NSString *_mediaType;
    NSDictionary *_outputSettings;
    struct opaqueCMFormatDescription { } *_sourceFormatHint;
    NSString *_languageCode;
    NSString *_extendedLanguageTag;
    NSArray *_metadata;
    NSDictionary *_trackReferences;
    bool_displaysNonForcedSubtitles;
    bool_enabled;
}

@property(readonly) AVAssetWriterInput * input;
@property(readonly) NSString * mediaType;
@property(readonly) NSDictionary * outputSettings;
@property(readonly) struct opaqueCMFormatDescription { }* sourceFormatHint;
@property(readonly) NSString * languageCode;
@property(readonly) NSString * extendedLanguageTag;
@property(readonly) NSArray * metadata;
@property(readonly) NSDictionary * trackReferences;
@property(readonly) bool displaysNonForcedSubtitles;

+ (id)assetWriterInputSelectionOptionWithAssetWriterInput:(id)arg1;
+ (id)assetWriterInputSelectionOptionWithAssetWriterInput:(id)arg1 displaysNonForcedSubtitles:(bool)arg2;

- (void)finalize;
- (id)extendedLanguageTag;
- (bool)hasMediaCharacteristic:(id)arg1;
- (id)mediaType;
- (id)commonMetadata;
- (id)metadata;
- (id)outputSettings;
- (id)languageCode;
- (id)locale;
- (id)input;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)mediaSubTypes;
- (bool)isPlayable;
- (id)trackReferences;
- (id)associatedMediaSelectionOptionInMediaSelectionGroup:(id)arg1;
- (id)propertyList;
- (bool)displaysNonForcedSubtitles;
- (bool)_isDesignatedDefault;
- (id)_ancillaryDescription;
- (bool)_isMainProgramContent;
- (bool)_isAuxiliaryContent;
- (id)_taggedCharacteristics;
- (bool)_hasEqualValueForKey:(id)arg1 asObject:(id)arg2;
- (id)initWithAssetWriterInput:(id)arg1 displaysNonForcedSubtitles:(bool)arg2;
- (id)initWithAssetWriterInput:(id)arg1;
- (struct opaqueCMFormatDescription { }*)sourceFormatHint;
- (id)metadataForFormat:(id)arg1;
- (id)availableMetadataFormats;

@end
