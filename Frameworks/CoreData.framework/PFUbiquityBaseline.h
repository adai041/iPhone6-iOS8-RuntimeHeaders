/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@class NSPersistentStore, PFUbiquityLocation, NSString, PFUbiquityBaselineMetadata, _PFZipFileArchive, NSMutableDictionary, NSDictionary, NSManagedObjectModel;

@interface PFUbiquityBaseline : PFUbiquitySafeSaveFile  {
    PFUbiquityLocation *_baselineStagingLocation;
    PFUbiquityBaselineMetadata *_metadata;
    NSMutableDictionary *_storeFilenameToData;
    NSString *_storeFilename;
    NSString *_storeName;
    NSString *_modelVersionHash;
    NSManagedObjectModel *_model;
    _PFZipFileArchive *_baselineArchive;
    NSPersistentStore *_store;
}

@property(readonly) PFUbiquityLocation * baselineArchiveLocation;
@property(readonly) PFUbiquityLocation * baselineStagingLocation;
@property(readonly) PFUbiquityLocation * baselinePeerArchiveLocation;
@property(readonly) PFUbiquityBaselineMetadata * metadata;
@property(readonly) NSDictionary * storeFilenameToData;
@property(readonly) NSString * storeFilename;
@property(readonly) NSString * storeName;
@property(readonly) NSString * modelVersionHash;
@property(readonly) _PFZipFileArchive * baselineArchive;
@property(readonly) NSPersistentStore * store;

+ (id)createStringOfContentsOfBaselineFile:(id)arg1;
+ (bool)removePeerSpecificIdentifiersFromStore:(id)arg1 withLocalPeerID:(id)arg2;
+ (id)createBaselineOptimizedModelForStoreName:(id)arg1 peerID:(id)arg2 modelVersionHash:(id)arg3 andUbiquityRootLocation:(id)arg4;
+ (id)createBaselineGCModelForStoreName:(id)arg1 peerID:(id)arg2 modelVersionHash:(id)arg3 andUbiquityRootLocation:(id)arg4;
+ (id)createModelFromBaselineModelWithModelVersionHash:(id)arg1 peerID:(id)arg2 storeName:(id)arg3 andUbiquityRootLocation:(id)arg4;
+ (bool)isPeerReceiptTooOld:(id)arg1;
+ (id)metadataFromCurrentBaselineForStoreWithName:(id)arg1 peerID:(id)arg2 modelVersionHash:(id)arg3 andUbiquityRootLocation:(id)arg4 withError:(id*)arg5;
+ (id)metadataFromBaselineArchive:(id)arg1;
+ (id)createArchiveWithModel:(id)arg1 metadata:(id)arg2 storeFilenameToData:(id)arg3 storeFilename:(id)arg4 error:(id*)arg5;
+ (bool)checkPeerReceiptsUnderRootLocation:(id)arg1 forAgreementWithLocalPeerID:(id)arg2 storeName:(id)arg3 modelVersionHash:(id)arg4 error:(id*)arg5;

- (id)metadata;
- (void)setMetadata:(id)arg1;
- (id)description;
- (id)init;
- (void)dealloc;
- (bool)removeUnusedExternalDataReferences:(id*)arg1;
- (id)createManagedObjectModel;
- (id)storeData;
- (id)baselineMetadataData;
- (bool)writeFileToLocation:(id)arg1 error:(id*)arg2;
- (bool)updateCurrentStoreIdentifier:(id)arg1 error:(id*)arg2;
- (bool)importBaselineForStoreAtURL:(id)arg1 ofType:(id)arg2 options:(id)arg3 withLocalPeerID:(id)arg4 stack:(id)arg5 andPersistentStoreCoordinator:(id)arg6 error:(id*)arg7;
- (bool)metadataMatchesCurrentMetadata:(id*)arg1;
- (bool)isUploaded:(id*)arg1;
- (bool)canReplaceStoreAtKnowledgeVector:(id)arg1;
- (bool)loadFileFromLocation:(id)arg1 error:(id*)arg2;
- (bool)gatherContentsAndConstructArchiveWithError:(id*)arg1;
- (bool)gatherContentsFromMigratedBaseline:(id)arg1 withStoreFileURL:(id)arg2 error:(id*)arg3;
- (bool)prepareForBaselineRollOfPersistentStore:(id)arg1 andLocalPeerID:(id)arg2 error:(id*)arg3;
- (id)initWithLocalPeerID:(id)arg1 ubiquityRootLocation:(id)arg2 forStoreWithName:(id)arg3 andManagedObjectModel:(id)arg4;
- (id)createSetOfInUseExternalDataRefUUIDs:(id*)arg1;
- (id)baselineArchive;
- (id)createManagedObjectModelFromCurrentBaseline;
- (bool)moveToPermanentLocation:(id*)arg1;
- (id)gcModelData;
- (id)optimizedModelData;
- (id)_createPersistentStoreCoordinatorForCurrentBaseline:(bool)arg1 error:(id*)arg2;
- (bool)replaceLocalPersistentStoreAtURL:(id)arg1 ofType:(id)arg2 withOptions:(id)arg3 usingPersistentStoreCoordinator:(id)arg4 error:(id*)arg5;
- (bool)makeCurrentBaselineWithError:(id*)arg1;
- (bool)haveTransactionLogsForPeer:(id)arg1 between:(long long)arg2 and:(long long)arg3;
- (bool)unpackStoreFilesToStagingLocation:(id*)arg1;
- (id)baselinePeerArchiveLocation;
- (bool)constructBaselineArchive:(id*)arg1;
- (id)storeFilename;
- (id)storeFilenameToData;
- (bool)clearOutStagingLocationWithError:(id*)arg1;
- (id)baselineStagingLocation;
- (id)baselineArchiveLocation;
- (id)createPersistentStoreCoordinatorForCurrentBaseline:(id*)arg1;
- (id)initWithBaselineLocation:(id)arg1 andLocalPeerID:(id)arg2;
- (id)storeName;
- (id)modelVersionHash;
- (id)store;

@end
