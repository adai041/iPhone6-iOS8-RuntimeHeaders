/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@class NSData, NSString;

@interface NSData : NSObject <NSCopying, NSMutableCopying, NSSecureCoding> {
}

@property(readonly) NSData * SHA1Data;
@property(readonly) NSString * SHA1HexString;
@property(readonly) unsigned long long length;
@property(readonly) const void* bytes;

+ (id)dataWithData:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1;
+ (id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(bool)arg3;
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
+ (id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2;
+ (id)dataWithContentsOfFile:(id)arg1;
+ (id)data;
+ (bool)supportsSecureCoding;
+ (id)dataWithBytes:(const void*)arg1 length:(unsigned long long)arg2;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
+ (id)dataWithContentsOfMappedFile:(id)arg1;
+ (id)__imDataWithRandomBytes:(unsigned long long)arg1;
+ (id)__imDataWithHexString:(id)arg1;
+ (id)MCDataWithCFData:(struct __CFData { }*)arg1;
+ (id)MCDataWithHexString:(id)arg1;
+ (id)dataWithHexString:(id)arg1;

- (bool)_isSafeResumeDataForBackgroundDownload:(int)arg1;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 deallocator:(id)arg3;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (bool)isEqualToData:(id)arg1;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2;
- (void)enumerateByteRangesUsingBlock:(id)arg1;
- (id)base64EncodedDataWithOptions:(unsigned long long)arg1;
- (id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2;
- (id)subdataWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)writeToFile:(id)arg1 atomically:(bool)arg2 error:(id*)arg3;
- (id)base64EncodedStringWithOptions:(unsigned long long)arg1;
- (void)getBytes:(void*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)initWithContentsOfURL:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(bool)arg3;
- (id)initWithBytes:(const void*)arg1 length:(unsigned long long)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (Class)classForCoder;
- (void)getBytes:(void*)arg1 length:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (const void*)bytes;
- (bool)writeToURL:(id)arg1 atomically:(bool)arg2;
- (bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (bool)writeToFile:(id)arg1 atomically:(bool)arg2;
- (bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (unsigned long long)length;
- (id)description;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)base64Encoding;
- (id)initWithBase64Encoding:(id)arg1;
- (id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id*)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id*)arg2;
- (void)getBytes:(void*)arg1;
- (bool)_allowsDirectEncoding;
- (id)_asciiDescription;
- (id)_base64EncodingAsString:(bool)arg1 withOptions:(unsigned long long)arg2;
- (id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2;
- (bool)_decodeBase64EncodedCharacterBuffer:(const char *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 buffer:(char *)arg4 bufferLength:(unsigned long long)arg5 state:(struct { boolx1; boolx2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; }*)arg6;
- (bool)_copyWillRetain;
- (bool)_isCompact;
- (bool)_canReplaceWithDispatchDataForXPCCoder;
- (id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(bool)arg3 freeWhenDone:(bool)arg4 bytesAreVM:(bool)arg5;
- (bool)_isDispatchData;
- (id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(bool)arg3 deallocator:(id)arg4;
- (unsigned long long)_cfTypeID;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (bool)isNSData__;
- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;
- (id)_web_parseRFC822HeaderFields;
- (id)_web_guessedMIMETypeForExtension:(id)arg1;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForXML;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)_CUTCopyGzippedData;
- (id)_CUTOptionallyDecompressData;
- (id)_CUTStringFromBaseData;
- (id)_CUTDecompressData;
- (id)__imHexString;
- (id)__imHexStringOfBytes:(char *)arg1 withLength:(unsigned long long)arg2;
- (id)SHA1HexString;
- (id)SHA1Data;
- (id)MCSHA1Hash;
- (id)MCInitWithBase64String:(id)arg1;
- (id)MCBase64String;
- (id)MCHexString;
- (id)abDecodeVCardBase64;
- (id)abEncodeVCardBase64DataWithInitialLength:(unsigned long long)arg1;
- (bool)abIsUTF16EntourageVCard;
- (id)abStringAtRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inEncoding:(unsigned long long)arg2;
- (id)abDecodedUTF7;
- (id)_webkit_guessedMIMEType;
- (id)_webkit_guessedMIMETypeForXML;
- (long long)_web_locationAfterFirstBlankLine;
- (bool)_web_startsWithBlankLine;
- (id)_webkit_parseRFC822HeaderFields;
- (bool)_web_isCaseInsensitiveEqualToCString:(const char *)arg1;
- (id)base64Encoded;
- (id)sha1Digest;
- (id)base64Decoded;
- (id)hexStringValue;
- (id)md5Digest;
- (id)asHexString;

@end
