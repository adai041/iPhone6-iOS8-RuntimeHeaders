/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface NSDictionary : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration> {
}

@property(readonly) unsigned short fileHFSFlags;
@property(readonly) unsigned long long fileHFSResourceForkSize;
@property(readonly) unsigned long long count;

+ (id)dictionaryWithObjectsAndKeys:(id)arg1;
+ (id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2;
+ (bool)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)dictionary;
+ (id)dictionaryWithObject:(id)arg1 forKey:(id)arg2;
+ (id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDictionary:(id)arg1 copyItems:(bool)arg2;
+ (id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3;
+ (id)sharedKeySetForKeys:(id)arg1;
+ (id)dictionaryWithContentsOfFile:(id)arg1;
+ (bool)supportsSecureCoding;
+ (id)dictionaryWithContentsOfURL:(id)arg1;
+ (id)newWithContentsOf:(id)arg1 immutable:(bool)arg2;
+ (id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2;
+ (id)dictionaryWithArchiveData:(id)arg1;
+ (id)dictionaryWithArchiveData:(id)arg1 allowedClasses:(id)arg2;
+ (id)_dictionaryWithData:(id)arg1 isPlist:(bool)arg2 allowedClasses:(id)arg3;
+ (id)dictionaryWithPlistData:(id)arg1;

- (bool)containsKey:(id)arg1;
- (id)initWithObjectsAndKeys:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)descriptionWithLocale:(id)arg1;
- (unsigned long long)countForObject:(id)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(bool)arg2;
- (id)keysOfEntriesPassingTest:(id)arg1;
- (id)allKeysForObject:(id)arg1;
- (id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)keyEnumerator;
- (id)allValues;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2;
- (bool)isEqualToDictionary:(id)arg1;
- (void)enumerateKeysAndObjectsUsingBlock:(id)arg1;
- (id)objectEnumerator;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)allObjects;
- (bool)containsObject:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned long long)count;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (id)allKeys;
- (id)initWithObject:(id)arg1 forKey:(id)arg2;
- (id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2;
- (id)keysSortedByValueUsingSelector:(SEL)arg1;
- (id)keysSortedByValueUsingComparator:(id)arg1;
- (id)keyOfEntryPassingTest:(id)arg1;
- (id)invertedDictionary;
- (id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(id)arg2;
- (id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(id)arg2;
- (id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(id)arg2;
- (void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(id)arg2;
- (void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3;
- (unsigned long long)_cfTypeID;
- (void)__apply:(int (*)())arg1 context:(void*)arg2;
- (bool)__getValue:(id*)arg1 forKey:(id)arg2;
- (unsigned long long)countForKey:(id)arg1;
- (void)getKeys:(id*)arg1;
- (void)getObjects:(id*)arg1 andKeys:(id*)arg2;
- (void)getObjects:(id*)arg1;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (bool)isNSDictionary__;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (Class)classForCoder;
- (bool)writeToURL:(id)arg1 atomically:(bool)arg2;
- (bool)writeToFile:(id)arg1 atomically:(bool)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)descriptionInStringsFileFormat;
- (id)_stringToWrite;
- (id)fileCreationDate;
- (unsigned long long)fileSize;
- (unsigned long long)filePosixPermissions;
- (id)fileOwnerAccountName;
- (id)fileModificationDate;
- (id)fileType;
- (id)fileGroupOwnerAccountID;
- (id)fileOwnerAccountID;
- (bool)fileIsAppendOnly;
- (unsigned int)fileHFSTypeCode;
- (unsigned int)fileHFSCreatorCode;
- (bool)fileExtensionHidden;
- (unsigned long long)fileSystemFileNumber;
- (long long)fileSystemNumber;
- (unsigned long long)fileGroupOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned long long)fileOwnerAccountNumber;
- (bool)fileIsImmutable;
- (id)valueForKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)_web_stringForKey:(id)arg1;
- (id)_web_objectForMIMEType:(id)arg1;
- (int)_web_intForKey:(id)arg1;
- (id)_web_numberForKey:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)dictionaryChanging:(id)arg1 to:(id)arg2;
- (id)dictionaryFromChanges:(id)arg1;
- (id)keysOfChangedEntriesComparedTo:(id)arg1;
- (id)__imDeepCopy;
- (bool)__imIsMutable;
- (id)plistData;
- (id)archiveData;
- (id)_dataForKey:(id)arg1;
- (id)_stringForKey:(id)arg1;
- (id)_numberForKey:(id)arg1;
- (id)_arrayForKey:(id)arg1;
- (id)_dictionaryForKey:(id)arg1;
- (unsigned long long)fileHFSResourceForkSize;
- (unsigned short)fileHFSFlags;
- (id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2;
- (void)bs_eachValue:(id)arg1;
- (bool)MR_isEqualToDictionary:(id)arg1;
- (struct KeyValueArray { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; unsigned int x3; struct Object {} *x4[1]; }*)CA_copyRenderKeyValueArray;
- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;
- (id)sbs_dictionaryByAddingEntriesFromDictionary:(id)arg1;
- (id)sbs_safeObjectForKey:(id)arg1 ofType:(Class)arg2;
- (id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5;
- (id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7;
- (id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6;
- (id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8;
- (id)MCDeepCopy;
- (id)MCMutableDeepCopy;
- (id)MCDeepCopyWithZone:(struct _NSZone { }*)arg1;
- (id)MCMutableDeepCopyWithZone:(struct _NSZone { }*)arg1;
- (id)asQueryParameterString;
- (int)_webkit_intForKey:(id)arg1;
- (id)_webkit_numberForKey:(id)arg1;
- (id)_webkit_arrayForKey:(id)arg1;
- (bool)_webkit_boolForKey:(id)arg1;
- (id)_webkit_stringForKey:(id)arg1;
- (id)_webkit_objectForMIMEType:(id)arg1;
- (bool)matchesUID:(id)arg1;
- (id)bw_dataSourceDictionaryForDesiredMicOrientation:(unsigned int)arg1;
- (bool)bw_containsBuiltInMicAsAnInput;
- (unsigned int)bw_optimalMicPolarPattern;
- (id)mutableDeepAutoreleasedCopy;
- (id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
- (bool)_ui_dictionaryContainsUIStringDrawingKeys;
- (bool)_boolForKey:(id)arg1;
- (int)_web_messageType;
- (id)_web_messageSourceURL;
- (int)_web_messageLineNumber;
- (id)_web_messageText;

@end
