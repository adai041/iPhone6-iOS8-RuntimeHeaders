/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

@class NSDate, NSString, NSCalendar, NSArray, NSMutableDictionary, NSLocale, NSObject<OS_dispatch_semaphore>, NSTimeZone;

@interface NSDateFormatter : NSFormatter  {
    NSMutableDictionary *_attributes;
    struct __CFDateFormatter { } *_formatter;
    unsigned long long _counter;
    NSObject<OS_dispatch_semaphore> *_lock;
}

@property long long formattingContext;
@property(copy) NSString * dateFormat;
@property unsigned long long dateStyle;
@property unsigned long long timeStyle;
@property(copy) NSLocale * locale;
@property bool generatesCalendarDates;
@property unsigned long long formatterBehavior;
@property(copy) NSTimeZone * timeZone;
@property(copy) NSCalendar * calendar;
@property(getter=isLenient) bool lenient;
@property(copy) NSDate * twoDigitStartDate;
@property(copy) NSDate * defaultDate;
@property(copy) NSArray * eraSymbols;
@property(copy) NSArray * monthSymbols;
@property(copy) NSArray * shortMonthSymbols;
@property(copy) NSArray * weekdaySymbols;
@property(copy) NSArray * shortWeekdaySymbols;
@property(copy) NSString * AMSymbol;
@property(copy) NSString * PMSymbol;
@property(copy) NSArray * longEraSymbols;
@property(copy) NSArray * veryShortMonthSymbols;
@property(copy) NSArray * standaloneMonthSymbols;
@property(copy) NSArray * shortStandaloneMonthSymbols;
@property(copy) NSArray * veryShortStandaloneMonthSymbols;
@property(copy) NSArray * veryShortWeekdaySymbols;
@property(copy) NSArray * standaloneWeekdaySymbols;
@property(copy) NSArray * shortStandaloneWeekdaySymbols;
@property(copy) NSArray * veryShortStandaloneWeekdaySymbols;
@property(copy) NSArray * quarterSymbols;
@property(copy) NSArray * shortQuarterSymbols;
@property(copy) NSArray * standaloneQuarterSymbols;
@property(copy) NSArray * shortStandaloneQuarterSymbols;
@property(copy) NSDate * gregorianStartDate;
@property bool doesRelativeDateFormatting;

+ (id)dateFormatFromTemplate:(id)arg1 options:(unsigned long long)arg2 locale:(id)arg3;
+ (void)initialize;
+ (unsigned long long)defaultFormatterBehavior;
+ (void)setDefaultFormatterBehavior:(unsigned long long)arg1;
+ (id)localizedStringFromDate:(id)arg1 dateStyle:(unsigned long long)arg2 timeStyle:(unsigned long long)arg3;

- (id)shortStandaloneMonthSymbols;
- (id)standaloneMonthSymbols;
- (id)shortMonthSymbols;
- (id)monthSymbols;
- (void)finalize;
- (id)dateFormat;
- (bool)getObjectValue:(out id*)arg1 forString:(id)arg2 errorDescription:(out id*)arg3;
- (id)dateFromString:(id)arg1;
- (void)setFormatterBehavior:(unsigned long long)arg1;
- (id)stringForObjectValue:(id)arg1;
- (void)_reset;
- (id)locale;
- (id)calendar;
- (id)timeZone;
- (void)setCalendar:(id)arg1;
- (id)PMSymbol;
- (id)AMSymbol;
- (void)setDoesRelativeDateFormatting:(bool)arg1;
- (void)setTimeStyle:(unsigned long long)arg1;
- (void)setDateStyle:(unsigned long long)arg1;
- (void)setLocale:(id)arg1;
- (id)stringFromDate:(id)arg1;
- (void)setDateFormat:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)setTimeZone:(id)arg1;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setLenient:(bool)arg1;
- (bool)doesRelativeDateFormatting;
- (void)setShortStandaloneQuarterSymbols:(id)arg1;
- (void)setStandaloneQuarterSymbols:(id)arg1;
- (void)setShortQuarterSymbols:(id)arg1;
- (void)setQuarterSymbols:(id)arg1;
- (void)setVeryShortStandaloneWeekdaySymbols:(id)arg1;
- (void)setShortStandaloneWeekdaySymbols:(id)arg1;
- (void)setStandaloneWeekdaySymbols:(id)arg1;
- (void)setVeryShortWeekdaySymbols:(id)arg1;
- (void)setVeryShortStandaloneMonthSymbols:(id)arg1;
- (void)setShortStandaloneMonthSymbols:(id)arg1;
- (void)setStandaloneMonthSymbols:(id)arg1;
- (void)setVeryShortMonthSymbols:(id)arg1;
- (void)setLongEraSymbols:(id)arg1;
- (void)setPMSymbol:(id)arg1;
- (void)setAMSymbol:(id)arg1;
- (void)setShortWeekdaySymbols:(id)arg1;
- (void)setWeekdaySymbols:(id)arg1;
- (void)setShortMonthSymbols:(id)arg1;
- (void)setMonthSymbols:(id)arg1;
- (void)setEraSymbols:(id)arg1;
- (void)setDefaultDate:(id)arg1;
- (id)defaultDate;
- (void)setTwoDigitStartDate:(id)arg1;
- (id)twoDigitStartDate;
- (void)_setIsLenient:(bool)arg1;
- (void)_setDateFormat:(id)arg1;
- (id)_dateFormat;
- (void)setGeneratesCalendarDates:(bool)arg1;
- (bool)generatesCalendarDates;
- (void)setLocalizedDateFormatFromTemplate:(id)arg1;
- (void)_setDateFormat:(id)arg1 alreadyLocked:(bool)arg2;
- (id)_getLocaleAlreadyLocked:(bool)arg1;
- (void)_regenerateFormatterIfAbsent;
- (id)_locale_forOldMethods;
- (id)_timeZone_forOldMethods;
- (void)_setUsesCharacterDirection:(bool)arg1;
- (bool)_usesCharacterDirection;
- (bool)isLenient;
- (unsigned long long)formatterBehavior;
- (void)_regenerateFormatter;
- (void)_clearFormatter;
- (bool)getObjectValue:(out id*)arg1 forString:(id)arg2 range:(inout struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3 error:(out id*)arg4;
- (unsigned long long)timeStyle;
- (unsigned long long)dateStyle;
- (long long)formattingContext;
- (void)setFormattingContext:(long long)arg1;
- (id)shortStandaloneQuarterSymbols;
- (id)standaloneQuarterSymbols;
- (id)shortQuarterSymbols;
- (id)quarterSymbols;
- (id)veryShortStandaloneWeekdaySymbols;
- (id)shortStandaloneWeekdaySymbols;
- (id)standaloneWeekdaySymbols;
- (id)veryShortWeekdaySymbols;
- (id)veryShortStandaloneMonthSymbols;
- (id)veryShortMonthSymbols;
- (id)longEraSymbols;
- (id)shortWeekdaySymbols;
- (id)weekdaySymbols;
- (id)eraSymbols;
- (void)setGregorianStartDate:(id)arg1;
- (id)gregorianStartDate;

@end
