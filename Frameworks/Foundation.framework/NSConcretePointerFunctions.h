/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSWeakCallback;

@interface NSConcretePointerFunctions : NSPointerFunctions  {
    struct NSSlice { 
        void **items; 
        boolwantsStrong; 
        boolwantsWeak; 
        boolwantsARC; 
        boolshouldCopyIn; 
        boolusesStrong; 
        boolusesWeak; 
        boolusesARC; 
        boolusesSentinel; 
        boolpointerPersonality; 
        boolintegerPersonality; 
        boolsimpleReadClear; 
        NSWeakCallback *callback; 
        int (*sizeFunction)(); 
        int (*hashFunction)(); 
        int (*isEqualFunction)(); 
        int (*describeFunction)(); 
        int (*acquireFunction)(); 
        int (*relinquishFunction)(); 
        int (*allocateFunction)(); 
        int (*freeFunction)(); 
        int (*readAt)(); 
        int (*clearAt)(); 
        int (*storeAt)(); 
    } slice;
}

+ (void)initializeBackingStore:(struct NSSlice { void **x1; boolx2; boolx3; boolx4; boolx5; boolx6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; id x13; int (*x14)(); int (*x15)(); int (*x16)(); int (*x17)(); int (*x18)(); int (*x19)(); int (*x20)(); int (*x21)(); int (*x22)(); int (*x23)(); int (*x24)(); }*)arg1 sentinel:(bool)arg2 compactable:(bool)arg3;
+ (bool)initializeSlice:(struct NSSlice { void **x1; boolx2; boolx3; boolx4; boolx5; boolx6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; id x13; int (*x14)(); int (*x15)(); int (*x16)(); int (*x17)(); int (*x18)(); int (*x19)(); int (*x20)(); int (*x21)(); int (*x22)(); int (*x23)(); int (*x24)(); }*)arg1 withOptions:(unsigned long long)arg2;

- (id)initWithOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)setDescriptionFunction:(int (*)())arg1;
- (void)setSizeFunction:(int (*)())arg1;
- (void)setIsEqualFunction:(int (*)())arg1;
- (void)setHashFunction:(int (*)())arg1;
- (void)setRelinquishFunction:(int (*)())arg1;
- (void)setAcquireFunction:(int (*)())arg1;
- (bool)usesWeakReadAndWriteBarriers;
- (bool)usesStrongWriteBarrier;
- (int (*)())relinquishFunction;
- (int (*)())acquireFunction;
- (int (*)())descriptionFunction;
- (int (*)())isEqualFunction;
- (int (*)())hashFunction;
- (int (*)())sizeFunction;
- (void)setUsesWeakReadAndWriteBarriers:(bool)arg1;
- (void)setUsesStrongWriteBarrier:(bool)arg1;

@end
