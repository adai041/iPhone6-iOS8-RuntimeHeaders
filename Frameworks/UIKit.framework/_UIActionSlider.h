/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIView, NSString, UIImage, UIFont, <_UIActionSliderDelegate>, UIImageView, _UIBackdropView, UIPanGestureRecognizer, UIBezierPath, _UIGlintyStringView;

@interface _UIActionSlider : UIControl <UIGestureRecognizerDelegate> {
    UIView *_contentView;
    UIView *_trackDodgeView;
    UIView *_trackBackgroundView;
    _UIBackdropView *_trackBlurView;
    UIView *_trackSolidView;
    UIView *_knobView;
    UIImageView *_knobImageView;
    _UIGlintyStringView *_trackLabel;
    UIPanGestureRecognizer *_slideGestureRecognizer;
    struct CGPoint { 
        double x; 
        double y; 
    } _slideGestureInitialPoint;
    double _knobPosition;
    double _trackWidthProportion;
    bool_showingTrackLabel;
    bool_animating;
    long long _style;
    double _trackTextBaselineFromBottom;
    <_UIActionSliderDelegate> *_delegate;
    double _knobWidth;
    double _cachedTrackMaskWidth;
    struct CGSize { 
        double width; 
        double height; 
    } _knobImageOffset;
    struct CGSize { 
        double width; 
        double height; 
    } _trackSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _knobInsets;
}

@property long long style;
@property(retain) UIImage * knobImage;
@property struct CGSize { double x1; double x2; } knobImageOffset;
@property(copy) NSString * trackText;
@property(retain) UIFont * trackFont;
@property struct CGSize { double x1; double x2; } trackSize;
@property double trackTextBaselineFromBottom;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } trackTextRect;
@property <_UIActionSliderDelegate> * delegate;
@property double knobPosition;
@property double knobWidth;
@property struct UIEdgeInsets { double x1; double x2; double x3; double x4; } knobInsets;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } knobRect;
@property(readonly) UIBezierPath * knobMaskPath;
@property double trackWidthProportion;
@property(getter=isShowingTrackLabel) bool showingTrackLabel;
@property(getter=isAnimating) bool animating;
@property double cachedTrackMaskWidth;
@property(getter=_knobView,readonly) UIView * knobView;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (double)knobPosition;
- (void)setTrackTextBaselineFromBottom:(double)arg1;
- (struct CGSize { double x1; double x2; })knobImageOffset;
- (void)closeTrackAnimated:(bool)arg1;
- (void)openTrackAnimated:(bool)arg1;
- (void)setKnobInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setKnobWidth:(double)arg1;
- (void)setTrackSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setTrackFont:(id)arg1;
- (id)trackFont;
- (void)setTrackText:(id)arg1;
- (id)trackText;
- (void)setKnobImageOffset:(struct CGSize { double x1; double x2; })arg1;
- (void)setKnobImage:(id)arg1;
- (id)knobImage;
- (id)knobMaskPath;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 vibrantSettings:(id)arg2;
- (void)_slideCompleted:(bool)arg1;
- (void)setKnobPosition:(double)arg1;
- (void)setShowingTrackLabel:(bool)arg1;
- (bool)isShowingTrackLabel;
- (void)setMaskFromImage:(id)arg1 onView:(id)arg2;
- (id)trackMaskImage;
- (void)setMaskPath:(struct CGPath { }*)arg1 onView:(id)arg2;
- (id)trackMaskPath;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })trackTextRect;
- (double)cachedTrackMaskWidth;
- (double)trackWidthProportion;
- (double)_knobMaxX;
- (double)_knobMaxXInset;
- (double)_knobAvailableX;
- (double)_knobMinX;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })knobInsets;
- (double)knobWidth;
- (void)updateAllTrackMasks;
- (void)_showTrackLabel;
- (void)setTrackWidthProportion:(double)arg1;
- (void)_hideTrackLabel:(bool)arg1;
- (struct CGSize { double x1; double x2; })trackSize;
- (double)trackTextBaselineFromBottom;
- (double)_knobMinXInset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_trackFrame;
- (double)_knobVerticalInset;
- (double)_knobHorizontalPosition;
- (double)_knobWidth;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })knobRect;
- (void)setCachedTrackMaskWidth:(double)arg1;
- (void)_knobPanGesture:(id)arg1;
- (id)_knobView;
- (void)setAnimating:(bool)arg1;
- (bool)isAnimating;
- (void)setStyle:(long long)arg1;
- (void)didMoveToSuperview;
- (long long)style;
- (id)delegate;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)setDelegate:(id)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;

@end
