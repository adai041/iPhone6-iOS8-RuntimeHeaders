/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class _UISearchBarNavigationItem, UIBarButtonItem, UILabel, UIImage, UISearchController, UITapGestureRecognizer, <UISearchBarDelegate><UISearchBarDelegate_Private>, _UIBackdropView, UIButton, UIView, _UISearchBarScopeBarBackground, NSString, UIColor, <UISearchBarDelegate>, UITextInputTraits, NSArray, UISearchBarTextField, UIImageView;

@interface UISearchBar : UIView <UITextInputTraits_Private, UIStatusBarTinting, _UIBarPositioningInternal, UIBarPositioning, UITextInputTraits> {
    UISearchBarTextField *_searchField;
    UILabel *_promptLabel;
    UIButton *_cancelButton;
    <UISearchBarDelegate><UISearchBarDelegate_Private> *_delegate;
    id _controller;
    UIColor *_barTintColor;
    UIImageView *_separator;
    NSString *_cancelButtonText;
    NSArray *_scopes;
    long long _selectedScope;
    UIView *_background;
    UIView *_scopeBar;
    UIView *_scopeBarContainerView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _contentInset;
    UIImageView *_shadowView;
    id _appearanceStorage;
    _UISearchBarNavigationItem *_navigationItem;
    _UISearchBarScopeBarBackground *_scopeBarBackgroundView;
    UIBarButtonItem *_animatedAppearanceBarButtonItem;
    _UIBackdropView *_backdrop;
    unsigned long long _backdropStyle;
    UIView *_maskView;
    UITapGestureRecognizer *_tapToActivateGestureRecognizer;
    UIBarButtonItem *_cancelBarButtonItem;
    UITextInputTraits *_textInputTraits;
    UIButton *_leftButton;
    struct { 
        unsigned int barStyle : 3; 
        unsigned int showsBookmarkButton : 1; 
        unsigned int showsCancelButton : 1; 
        unsigned int barTranslucence : 3; 
        unsigned int autoDisableCancelButton : 1; 
        unsigned int showsScopeBar : 1; 
        unsigned int hideBackground : 1; 
        unsigned int combinesLandscapeBars : 1; 
        unsigned int usesEmbeddedAppearance : 1; 
        unsigned int showsSearchResultsButton : 1; 
        unsigned int searchResultsButtonSelected : 1; 
        unsigned int pretendsIsInBar : 1; 
        unsigned int disabled : 1; 
        unsigned int backgroundLayoutNeedsUpdate : 1; 
        unsigned int containedInNavigationPalette : 1; 
        unsigned int containedInNavigationBar : 1; 
        unsigned int containedInToolBar : 1; 
        unsigned int drawsBackgroundInPalette : 1; 
        unsigned int centerPlaceholder : 1; 
        unsigned int searchFieldLeftViewMode : 2; 
        unsigned int cancelButtonWantsLetterpress : 1; 
    } _searchBarFlags;
    bool__forceCenteredPlaceholderLayout;
    bool__transplanting;
    UIColor *_statusBarTintColor;
    UIView *_inputAccessoryView;
    long long _barPosition;
    unsigned long long _searchBarStyle;
    UISearchController *__searchController;
    unsigned long long __scopeBarPosition;
}

@property long long barStyle;
@property <UISearchBarDelegate> * delegate;
@property(copy) NSString * text;
@property(copy) NSString * prompt;
@property(copy) NSString * placeholder;
@property bool showsBookmarkButton;
@property bool showsCancelButton;
@property bool showsSearchResultsButton;
@property(getter=isSearchResultsButtonSelected) bool searchResultsButtonSelected;
@property(retain) UIColor * tintColor;
@property(retain) UIColor * barTintColor;
@property unsigned long long searchBarStyle;
@property(getter=isTranslucent) bool translucent;
@property(copy) NSArray * scopeButtonTitles;
@property long long selectedScopeButtonIndex;
@property bool showsScopeBar;
@property(retain) UIView * inputAccessoryView;
@property(retain) UIImage * backgroundImage;
@property(retain) UIImage * scopeBarBackgroundImage;
@property struct UIOffset { double x1; double x2; } searchFieldBackgroundPositionAdjustment;
@property struct UIOffset { double x1; double x2; } searchTextPositionAdjustment;
@property(retain,readonly) UIButton * _leftButton;
@property(setter=_setStatusBarTintColor:,retain) UIColor * _statusBarTintColor;
@property bool _forceCenteredPlaceholderLayout;
@property(setter=_setSearchController:) UISearchController * _searchController;
@property(setter=_setTransplanting:) bool _transplanting;
@property(setter=_setScopeBarPosition:) unsigned long long _scopeBarPosition;
@property(getter=_searchBarTextField,readonly) UISearchBarTextField * searchBarTextField;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property long long autocapitalizationType;
@property long long autocorrectionType;
@property long long spellCheckingType;
@property long long keyboardType;
@property long long keyboardAppearance;
@property long long returnKeyType;
@property bool enablesReturnKeyAutomatically;
@property(getter=isSecureTextEntry) bool secureTextEntry;
@property struct __CFCharacterSet { }* textTrimmingSet;
@property(retain) UIColor * insertionPointColor;
@property(retain) UIColor * selectionBarColor;
@property(retain) UIColor * selectionHighlightColor;
@property(retain) UIImage * selectionDragDotImage;
@property unsigned long long insertionPointWidth;
@property int textLoupeVisibility;
@property int textSelectionBehavior;
@property id textSuggestionDelegate;
@property bool isSingleLineDocument;
@property bool contentsIsSingleValue;
@property bool acceptsEmoji;
@property bool forceEnableDictation;
@property int emptyContentReturnKeyType;
@property bool returnKeyGoesToNextResponder;
@property bool acceptsFloatingKeyboard;
@property bool acceptsSplitKeyboard;
@property bool displaySecureTextUsingPlainText;
@property bool learnsCorrections;
@property int shortcutConversionType;
@property bool suppressReturnKeyStyling;
@property bool useInterfaceLanguageForLocalization;
@property bool deferBecomingResponder;
@property bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(copy) NSString * autocorrectionContext;
@property(copy) NSString * responseContext;
@property bool disablePrediction;
@property(readonly) long long barPosition;


- (void)_setScopeBarPosition:(unsigned long long)arg1;
- (void)_setTransplanting:(bool)arg1;
- (bool)_transplanting;
- (void)_setSearchController:(id)arg1;
- (id)_searchController;
- (void)set_forceCenteredPlaceholderLayout:(bool)arg1;
- (bool)_forceCenteredPlaceholderLayout;
- (unsigned long long)searchBarStyle;
- (void)_setCancelButtonWantsLetterpress;
- (id)_alternateTitle;
- (void)setSearchFieldLeftViewMode:(long long)arg1;
- (long long)searchFieldLeftViewMode;
- (void)setCenterPlaceholder:(bool)arg1;
- (unsigned long long)_backdropStyle;
- (void)_setBackdropStyle:(unsigned long long)arg1;
- (void)_setBackgroundLayoutNeedsUpdate:(bool)arg1;
- (id)_animatedAppearanceBarButtonItem;
- (struct UIOffset { double x1; double x2; })positionAdjustmentForSearchBarIcon:(long long)arg1;
- (void)setPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1 forSearchBarIcon:(long long)arg2;
- (id)scopeBarButtonTitleTextAttributesForState:(unsigned long long)arg1;
- (void)setScopeBarButtonTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)scopeBarButtonDividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;
- (void)setScopeBarButtonDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;
- (id)scopeBarButtonBackgroundImageForState:(unsigned long long)arg1;
- (void)setScopeBarButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forSearchBarIcon:(long long)arg2 state:(unsigned long long)arg3;
- (void)_setSeparatorImage:(id)arg1;
- (id)_separatorImage;
- (void)_setStatusBarTintColor:(id)arg1;
- (bool)showsScopeBar;
- (void)setShowsScopeBar:(bool)arg1;
- (void)_setScopeBarHidden:(bool)arg1;
- (long long)selectedScopeButtonIndex;
- (void)setSelectedScopeButtonIndex:(long long)arg1;
- (id)_leftButton;
- (bool)usesEmbeddedAppearance;
- (bool)_wouldCombineLandscapeBarsForSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)combinesLandscapeBars;
- (void)setCombinesLandscapeBars:(bool)arg1;
- (void)_setShowsCancelButton:(bool)arg1;
- (bool)showsCancelButton;
- (void)setShowsCancelButton:(bool)arg1;
- (bool)showsBookmarkButton;
- (void)setShowsBookmarkButton:(bool)arg1;
- (bool)isSearchResultsButtonSelected;
- (void)setSearchResultsButtonSelected:(bool)arg1;
- (bool)showsSearchResultsButton;
- (void)setShowsSearchResultsButton:(bool)arg1;
- (void)didMoveToWindow:(id)arg1;
- (id)_scopeBar;
- (void)setController:(id)arg1;
- (void)_applySearchBarStyle;
- (bool)_isAtTop;
- (id)_imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2 customImage:(bool*)arg3;
- (id)_glyphAndTextColor:(bool)arg1;
- (void)_updateNeedForBackdrop;
- (void)_effectiveBarTintColorDidChange:(bool)arg1;
- (void)_setShowsScopeBar:(bool)arg1 animateOpacity:(bool)arg2;
- (void)_setUpScopeBar;
- (id)controller;
- (id)_makeShadowView;
- (id)_navigationBarForShadow;
- (double)_searchFieldHeight;
- (void)_layoutBackgroundViewConsideringTopBarStatusAndChangedHeight:(bool)arg1;
- (bool)drawsBackground;
- (double)_scopeBarHeight;
- (bool)_scopeBarIsVisible;
- (id)_viewForChildViews;
- (double)_landscapeSearchFieldWidth;
- (double)_availableBoundsWidth;
- (double)_defaultHeight;
- (bool)_shouldCombineLandscapeBars;
- (double)_barHeightForBarMetrics:(long long)arg1;
- (long long)_barMetricsForOrientation:(long long)arg1;
- (void)_setupLeftButton;
- (void)_setBarTintColor:(id)arg1 forceUpdate:(bool)arg2;
- (bool)_searchFieldWidthShouldBeFlexible;
- (double)_availableBoundsWidthForSize:(struct CGSize { double x1; double x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_scopeBarInsets;
- (double)_landscapeScopeBarWidth;
- (unsigned long long)_scopeBarPosition;
- (bool)_shouldCombineLandscapeBarsForOrientation:(long long)arg1;
- (bool)drawsBackgroundInPalette;
- (bool)_containedInNavigationPalette;
- (id)_cancelBarButtonItem;
- (void)_displayNavBarCancelButton:(bool)arg1 animated:(bool)arg2;
- (void)_allowCursorToAppear:(bool)arg1;
- (void)setShowsCancelButton:(bool)arg1 animated:(bool)arg2;
- (id)_imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;
- (void)_updateRightView;
- (void)_updatePlaceholderColor;
- (void)_updateScopeBarBackground;
- (id)_currentSeparatorImage;
- (id)_searchBarTextField;
- (void)_removeMarginsIfNecessary;
- (void)setDrawsBackgroundInPalette:(bool)arg1;
- (void)_identifyBarContainer;
- (bool)_shouldDisplayShadow;
- (void)_setShadowVisibleIfNecessary:(bool)arg1;
- (bool)centerPlaceholder;
- (struct UIOffset { double x1; double x2; })searchFieldBackgroundPositionAdjustment;
- (struct UIOffset { double x1; double x2; })searchTextPositionAdjustment;
- (id)placeholder;
- (id)scopeButtonTitles;
- (id)_scopeBarContainer;
- (void)setSearchFieldBackgroundPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1;
- (void)setSearchTextPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1;
- (void)_setShowsSeparator:(bool)arg1;
- (void)setSearchBarStyle:(unsigned long long)arg1;
- (void)setUsesEmbeddedAppearance:(bool)arg1;
- (void)_scopeChanged:(id)arg1;
- (void)setScopeButtonTitles:(id)arg1;
- (void)_setMaskBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)tappedSearchBar:(id)arg1;
- (void)_setMaskActive:(bool)arg1;
- (void)setScopeBarBackgroundImage:(id)arg1;
- (id)scopeBarBackgroundImage;
- (id)searchFieldBackgroundImageForState:(unsigned long long)arg1;
- (void)setSearchFieldBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)searchField;
- (void)setInputAccessoryView:(id)arg1;
- (void)setDrawsBackground:(bool)arg1;
- (void)setBackgroundImage:(id)arg1;
- (id)inputAccessoryView;
- (id)_navigationItem;
- (void)setCancelButton:(id)arg1;
- (id)cancelButton;
- (void)setPlaceholder:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (id)textInputTraits;
- (void)_updateInsetsForTableView:(id)arg1;
- (id)barTintColor;
- (long long)barPosition;
- (long long)_barPosition;
- (bool)_shouldUseNavigationBarHeight;
- (void)setBarTintColor:(id)arg1;
- (void)setTranslucent:(bool)arg1;
- (long long)barStyle;
- (void)setBarStyle:(long long)arg1;
- (void)_setBarPosition:(long long)arg1;
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (id)_effectiveBarTintColor;
- (void)setBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;
- (void)setPrompt:(id)arg1;
- (id)prompt;
- (id)backgroundImage;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setContentInset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)movedToSuperview:(id)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)willMoveToWindow:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)setTintColor:(id)arg1;
- (void)_commonInit;
- (void)setText:(id)arg1;
- (id)text;
- (id)methodSignatureForSelector:(SEL)arg1;
- (bool)isTranslucent;
- (id)_statusBarTintColor;
- (id)delegate;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (id)_textColor;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)sendSubviewToBack:(id)arg1;
- (void)layoutSubviews;
- (void)bringSubviewToFront:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)respondsToSelector:(SEL)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateBackgroundToBackdropStyle:(long long)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setAutoDisableCancelButton:(bool)arg1;
- (void)_setCancelButtonText:(id)arg1;
- (bool)_textFieldShouldScrollToVisibleWhenBecomingFirstResponder:(id)arg1;
- (void)setPretendsIsInBar:(bool)arg1;
- (void)_setScopeBarSegmentsEnabled:(bool)arg1;
- (void)_setEnabled:(bool)arg1 animated:(bool)arg2;
- (void)_setupCancelButtonWithAppearance:(id)arg1;
- (void)_searchFieldReturnPressed;
- (void)_searchFieldEndEditing;
- (void)_searchFieldEditingChanged;
- (void)_searchFieldBeginEditing;
- (bool)pretendsIsInBar;
- (id)_scopeBarBackgroundView;
- (void)_cancelButtonPressed;
- (bool)_isInBar;
- (void)_destroyCancelButton;
- (void)_bookmarkButtonPressed;
- (void)_resultsListButtonPressed;
- (void)_updateMagnifyingGlassView;
- (void)_updateSearchFieldArt;
- (bool)_consideredInBarWithSuperview:(id)arg1;
- (void)_setupCancelButton;
- (void)_setupPromptLabel;
- (void)_setupSearchField;
- (bool)canResignFirstResponder;
- (void)reloadInputViews;
- (bool)textFieldShouldClear:(id)arg1;
- (bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (bool)textFieldShouldEndEditing:(id)arg1;
- (bool)textFieldShouldBeginEditing:(id)arg1;
- (bool)_isEnabled;
- (void)_updateOpacity;
- (bool)canBecomeFirstResponder;
- (bool)isFirstResponder;
- (bool)becomeFirstResponder;
- (bool)resignFirstResponder;
- (id)_backgroundView;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)_hasCustomAutolayoutNeighborSpacing;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;

@end
