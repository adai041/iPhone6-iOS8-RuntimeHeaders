/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class _UIDatePickerMode, NSCalendar, NSDate, UIDatePicker, UIFont, NSString, NSLocale, NSDateComponents, NSTimeZone, UILabel, _UIDatePickerChineseCalendar;

@interface _UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource> {
    long long _loadingDate;
    NSDate *_userSuppliedDate;
    NSDate *_userSuppliedMinimumDate;
    NSDate *_userSuppliedMaximumDate;
    NSLocale *_compositeLocale;
    NSLocale *_userProvidedLocale;
    NSCalendar *_userProvidedCalendar;
    _UIDatePickerChineseCalendar *_chineseWrapperCalendar;
    NSDate *_minimumDate;
    NSDate *_maximumDate;
    NSDateComponents *_lastSelectedDateComponents;
    bool_allowsZeroTimeInterval;
    _UIDatePickerMode *_mode;
    NSTimeZone *_timeZone;
    double _timeInterval;
    UILabel *_hourLabel;
    UILabel *_minuteLabel;
    UIDatePicker *_datePickerDelegate;
    id _delegateOfDatePicker;
    int _expectedAMPM;
    struct { 
        unsigned int staggerTimeIntervals : 1; 
        unsigned int loadingDateOrTime : 1; 
        unsigned int highlightsToday : 1; 
        unsigned int usesBlackChrome : 1; 
    } _datePickerFlags;
}

@property bool highlightsToday;
@property(readonly) NSCalendar * calendar;
@property(readonly) NSLocale * locale;
@property(getter=_amPmValue,readonly) long long amPmValue;
@property(getter=_hrMinFont,readonly) UIFont * hrMinFont;
@property(getter=_lastSelectedDateComponents,readonly) NSDateComponents * lastSelectedDateComponents;
@property bool staggerTimeIntervals;
@property(copy) NSDateComponents * dateComponents;
@property long long datePickerMode;
@property(retain) NSLocale * userProvidedLocale;
@property(retain) NSTimeZone * timeZone;
@property(copy) NSCalendar * userProvidedCalendar;
@property(copy) NSDate * date;
@property(copy) NSDate * minimumDate;
@property(copy) NSDate * maximumDate;
@property double timeInterval;
@property long long minuteInterval;
@property id delegateOfDatePicker;
@property(getter=_usesBlackChrome,setter=_setUsesBlackChrome:) bool usesBlackChrome;
@property(getter=_allowsZeroCountDownDuration,setter=_setAllowsZeroCountDownDuration:) bool allowsZeroCountDownDuration;
@property(getter=_allowsZeroTimeInterval,setter=_setAllowsZeroTimeInterval:) bool allowsZeroTimeInterval;
@property(getter=_hasCustomCalendar,readonly) bool hasCustomCalendar;
@property(getter=_hasCustomLocale,readonly) bool hasCustomLocale;
@property(readonly) double contentWidth;
@property(getter=_isTimeIntervalMode,readonly) bool isTimeIntervalMode;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (id)delegateOfDatePicker;
- (id)_viewForSelectedRowInComponent:(long long)arg1;
- (bool)_showingDate;
- (void)_updateLabels:(bool)arg1;
- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(bool)arg3;
- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;
- (id)_makeNewAccessoryLabel;
- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(bool)arg2;
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;
- (int)_selectedMinuteForColumn:(int)arg1;
- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(bool)arg3;
- (int)_selectedHourForColumn:(int)arg1;
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;
- (void)_setMode:(id)arg1;
- (void)_updateEnabledCellsIncludingWMDCells:(bool)arg1;
- (void)_loadDate:(id)arg1 animated:(bool)arg2;
- (void)_doneLoadingDateOrTime;
- (void)_setDate:(id)arg1 animated:(bool)arg2 forced:(bool)arg3;
- (bool)_isCurrentCalendar:(id)arg1;
- (bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;
- (void)_todayChanged:(id)arg1;
- (void)_datePickerReset:(id)arg1;
- (void)_rebuildCompositeLocale;
- (void)_setAllowsZeroTimeInterval:(bool)arg1;
- (bool)_allowsZeroTimeInterval;
- (void)_setAllowsZeroCountDownDuration:(bool)arg1;
- (bool)_allowsZeroCountDownDuration;
- (bool)_usesBlackChrome;
- (void)_setUsesBlackChrome:(bool)arg1;
- (void)_setHidesLabels:(bool)arg1;
- (double)contentWidth;
- (void)setDelegateOfDatePicker:(id)arg1;
- (void)setDate:(id)arg1 animated:(bool)arg2;
- (void)setUserProvidedCalendar:(id)arg1;
- (id)userProvidedCalendar;
- (void)setUserProvidedLocale:(id)arg1;
- (id)userProvidedLocale;
- (long long)minuteInterval;
- (id)maximumDate;
- (id)minimumDate;
- (bool)_hasCustomCalendar;
- (id)timeZone;
- (bool)_hasCustomLocale;
- (long long)datePickerMode;
- (void)setMaximumDate:(id)arg1;
- (void)setMinimumDate:(id)arg1;
- (bool)_isTimeIntervalMode;
- (void)setMinuteInterval:(long long)arg1;
- (void)setDatePickerMode:(long long)arg1;
- (void)setTimeInterval:(double)arg1;
- (double)timeInterval;
- (void)setDate:(id)arg1;
- (id)shadowColor;
- (id)date;
- (void)setTimeZone:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;
- (void)_resetSelectionOfTables;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_tableRowHeight;
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(bool)arg3 notify:(bool)arg4;
- (void)setDelegate:(id)arg1;
- (id)_orientationImageSuffix;
- (id)pickerImageNamePrefix;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)second;
- (int)minute;
- (void)setStaggerTimeIntervals:(bool)arg1;
- (void)setDateComponents:(id)arg1;
- (id)dateComponents;
- (int)hour;
- (long long)_selectionBarRowInComponent:(long long)arg1;
- (bool)highlightsToday;
- (bool)staggerTimeIntervals;
- (id)_lastSelectedDateComponents;
- (id)_hrMinFont;
- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;
- (id)_hoursStringForHour:(long long)arg1;
- (long long)_amPmValue;
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;
- (bool)_updateDateOrTime;
- (void)setHighlightsToday:(bool)arg1;
- (id)locale;
- (id)calendar;

@end
