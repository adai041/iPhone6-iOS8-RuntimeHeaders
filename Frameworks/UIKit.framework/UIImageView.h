/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIImage, NSArray, UIColor;

@interface UIImageView : UIView  {
    id _storage;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _cachedEdgeInsetsForEffects;
    bool_templateSettingsAreInvalid;
    bool_edgeInsetsForEffectsAreValid;
    bool__animatesContents;
}

@property(retain) UIImage * image;
@property(retain) UIImage * highlightedImage;
@property(getter=isUserInteractionEnabled) bool userInteractionEnabled;
@property(getter=isHighlighted) bool highlighted;
@property(copy) NSArray * animationImages;
@property(copy) NSArray * highlightedAnimationImages;
@property double animationDuration;
@property long long animationRepeatCount;
@property(retain) UIColor * tintColor;
@property int drawMode;
@property(setter=_setTemplateImageRenderingEffects:) unsigned long long _templateImageRenderingEffects;
@property(setter=_setAnimatesContents:) bool _animatesContents;
@property(setter=_setDefaultRenderingMode:) long long _defaultRenderingMode;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _edgeInsetsForEffects;
@property(setter=_setEdgeInsetsForEffectsAreValid:) bool _edgeInsetsForEffectsAreValid;
@property(setter=_setMasksTemplateImages:) bool _masksTemplateImages;
@property(readonly) bool _templateSettingsAreInvalid;


- (void)_setAnimatesContents:(bool)arg1;
- (void)_setEdgeInsetsForEffectsAreValid:(bool)arg1;
- (bool)_edgeInsetsForEffectsAreValid;
- (bool)_templateSettingsAreInvalid;
- (void)setAnimating:(bool)arg1;
- (void)setCGImageRef:(struct CGImage { }*)arg1;
- (void)setDrawMode:(int)arg1;
- (int)drawMode;
- (void)_setMasksTemplateImages:(bool)arg1;
- (long long)animationRepeatCount;
- (double)animationDuration;
- (void)setHighlightedAnimationImages:(id)arg1;
- (void)setAnimationImages:(id)arg1;
- (id)initWithImage:(id)arg1 highlightedImage:(id)arg2;
- (bool)_animatesContents;
- (void)startAnimating;
- (void)_resolveImageForTrait:(id)arg1;
- (void)_invalidateTemplateSettings;
- (void)_templateSettingsDidChange;
- (void)_updateMasking;
- (bool)_shouldTreatImageAsTemplate:(id)arg1;
- (id)_decompressingImageForType:(unsigned long long)arg1;
- (id)_activeImage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_edgeInsetsForEffects;
- (void)_setViewGeometry:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forMetric:(int)arg2;
- (void)_updateTemplateProperties;
- (void)_updateState;
- (void)_updateImageViewForOldImage:(id)arg1 newImage:(id)arg2;
- (void)stopAnimating;
- (void)_setDecompressingImage:(id)arg1 forType:(unsigned long long)arg2;
- (bool)_setImageViewContents:(id)arg1;
- (bool)isAnimating;
- (void)_drawImageEffectsForImage:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)_needsImageEffectsForImage:(id)arg1 suppressColorizing:(bool)arg2;
- (id)_effectiveTintColorWithImage:(id)arg1;
- (bool)_needsImageEffectsForImage:(id)arg1;
- (bool)_shouldDrawImage:(id)arg1;
- (id)_currentHighlightedImage;
- (id)_currentImage;
- (bool)_masksTemplateImages;
- (long long)_defaultRenderingMode;
- (void)setHighlightedImage:(id)arg1;
- (id)highlightedImage;
- (id)highlightedAnimationImages;
- (id)animationImages;
- (bool)isHighlighted;
- (void)_setTemplateImageRenderingEffects:(unsigned long long)arg1;
- (void)_setDefaultRenderingMode:(long long)arg1;
- (unsigned long long)_templateImageRenderingEffects;
- (void)setHighlighted:(bool)arg1;
- (void)setAnimationRepeatCount:(long long)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)tintColorDidChange;
- (id)_generateBackdropMaskImage;
- (bool)_canDrawContent;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (struct CGImage { }*)imageRef;
- (id)image;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (void)setAnimationDuration:(double)arg1;
- (id)initWithImage:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setImage:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)useBlockyMagnificationInClassic;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)isAccessibilityElementByDefault;
- (unsigned long long)defaultAccessibilityTraits;
- (void)_applySettingsForLegibilityStyle:(long long)arg1;
- (bool)_recomputePretilingState;
- (void)_updatePretiledImageCacheForImage:(id)arg1;
- (void)_clearPretiledImageCacheForImage:(id)arg1;
- (id)_cachedPretiledImageForImage:(id)arg1;

@end
