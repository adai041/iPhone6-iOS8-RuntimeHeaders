/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIFont, NSString, UIView, UIColor, _UILegibilitySettings, _UIVibrantSettings, UIImage, NSMutableSet, UILabel, <_UIGlintyStringViewDelegate>;

@interface _UIGlintyStringView : UIView  {
    bool_animationRepeats;
    bool_adjustsFontSizeToFitWidth;
    bool_hasCustomBackgroundColor;
    bool_highlight;
    bool_allowsLuminanceAdjustments;
    bool_usesBackgroundDimming;
    bool_needsTextUpdate;
    bool_animating;
    bool_fading;
    bool_showing;
    int _textIndex;
    <_UIGlintyStringViewDelegate> *_delegate;
    NSString *_text;
    UIFont *_font;
    NSString *_textLanguage;
    _UILegibilitySettings *_legibilitySettings;
    _UIVibrantSettings *_vibrantSettings;
    UIView *_backgroundView;
    UIColor *_backgroundColor;
    UIColor *_chevronBackgroundColor;
    long long _chevronStyle;
    double _horizontalPadding;
    UILabel *_label;
    UIView *_spotlightView;
    UIImage *_chevron;
    UIView *_highlightView;
    UIView *_effectView;
    UIView *_blurView;
    double _blurAlpha;
    NSMutableSet *_blurHiddenRequesters;
    struct CGSize { 
        double width; 
        double height; 
    } _labelSize;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _chevronFrame;
}

@property <_UIGlintyStringViewDelegate> * delegate;
@property(copy) NSString * text;
@property(retain) UIFont * font;
@property(copy) NSString * textLanguage;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } labelFrame;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } chevronFrame;
@property(retain) _UILegibilitySettings * legibilitySettings;
@property(retain) _UIVibrantSettings * vibrantSettings;
@property(retain) UIView * backgroundView;
@property(retain) UIColor * backgroundColor;
@property(retain) UIColor * chevronBackgroundColor;
@property bool animationRepeats;
@property bool adjustsFontSizeToFitWidth;
@property bool hasCustomBackgroundColor;
@property long long chevronStyle;
@property double horizontalPadding;
@property bool highlight;
@property bool allowsLuminanceAdjustments;
@property bool usesBackgroundDimming;
@property bool needsTextUpdate;
@property(retain) UILabel * label;
@property struct CGSize { double x1; double x2; } labelSize;
@property(retain) UIView * spotlightView;
@property int textIndex;
@property(retain) UIImage * chevron;
@property(retain) UIView * highlightView;
@property bool animating;
@property bool fading;
@property bool showing;
@property(retain) UIView * effectView;
@property(retain) UIView * blurView;
@property double blurAlpha;
@property(retain) NSMutableSet * blurHiddenRequesters;


- (void)setBlurHiddenRequesters:(id)arg1;
- (id)blurHiddenRequesters;
- (id)highlightView;
- (void)setTextIndex:(int)arg1;
- (int)textIndex;
- (void)setSpotlightView:(id)arg1;
- (id)spotlightView;
- (void)setLabelSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })labelSize;
- (void)setUsesBackgroundDimming:(bool)arg1;
- (void)setAllowsLuminanceAdjustments:(bool)arg1;
- (bool)highlight;
- (double)horizontalPadding;
- (long long)chevronStyle;
- (void)setHasCustomBackgroundColor:(bool)arg1;
- (void)setAnimationRepeats:(bool)arg1;
- (bool)animationRepeats;
- (void)setChevronBackgroundColor:(id)arg1;
- (id)chevronBackgroundColor;
- (id)legibilitySettings;
- (void)setChevronFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)textLanguage;
- (double)baselineOffsetFromBottom;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })chevronFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })labelFrame;
- (void)_updateHighlight;
- (void)setHorizontalPadding:(double)arg1;
- (void)setHighlight:(bool)arg1;
- (void)fadeIn;
- (void)fadeOut;
- (void)setBlurHidden:(bool)arg1 forRequester:(id)arg2;
- (void)setVibrantSettings:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setTextLanguage:(id)arg1;
- (id)initWithText:(id)arg1 andFont:(id)arg2;
- (double)baselineOffsetFromBottomWithSize:(struct CGSize { double x1; double x2; })arg1;
- (double)_chevronPadding;
- (struct CGSize { double x1; double x2; })_labelSizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (bool)needsTextUpdate;
- (id)_highlightCompositingFilter;
- (void)setHighlightView:(id)arg1;
- (double)blurAlpha;
- (void)setBlurView:(id)arg1;
- (bool)usesBackgroundDimming;
- (id)chevron;
- (id)shapeViewForCharactersInString:(id)arg1 withFont:(id)arg2 centeredInFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)setEffectView:(id)arg1;
- (id)vibrantSettings;
- (bool)allowsLuminanceAdjustments;
- (double)_chevronVerticalOffset;
- (void)_updateLabelWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_chevronHeightWithMaxOffset;
- (double)_chevronWidthWithPaddingCompression:(double)arg1;
- (double)_chevronWidthWithPadding;
- (void)updateTextWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setChevron:(id)arg1;
- (id)_chevronImageForStyle:(long long)arg1;
- (void)fadeInWithDuration:(double)arg1;
- (void)setFading:(bool)arg1;
- (void)showBlur;
- (void)showEffects;
- (void)setShowing:(bool)arg1;
- (void)hideBlur;
- (void)hideEffects;
- (bool)fading;
- (void)updateBlurForHiddenRequesters;
- (id)blurView;
- (void)setBlurAlpha:(double)arg1;
- (id)effectView;
- (bool)hasCustomBackgroundColor;
- (void)setNeedsTextUpdate:(bool)arg1;
- (void)updateText;
- (void)setChevronStyle:(long long)arg1;
- (bool)animating;
- (void)fadeOutWithDuration:(double)arg1;
- (void)setLabel:(id)arg1;
- (void)setAnimating:(bool)arg1;
- (void)startAnimating;
- (void)stopAnimating;
- (bool)isAnimating;
- (id)label;
- (id)backgroundView;
- (void)setBackgroundView:(id)arg1;
- (id)font;
- (bool)adjustsFontSizeToFitWidth;
- (void)setAdjustsFontSizeToFitWidth:(bool)arg1;
- (void)setText:(id)arg1;
- (id)text;
- (void)setFont:(id)arg1;
- (id)delegate;
- (id)_highlightColor;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)setDelegate:(id)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (void)show;
- (bool)showing;
- (void)hide;

@end
