/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIColor, NSString, UIView, NSMutableArray;

@interface UISegmentedControl : UIControl <_UIBasicAnimationFactory, NSCoding> {
    NSMutableArray *_segments;
    long long _selectedSegment;
    long long _highlightedSegment;
    UIView *_removedSegment;
    long long _barStyle;
    id _appearanceStorage;
    UIView *_backgroundBarView;
    double _enabledAlpha;
    struct { 
        unsigned int style : 3; 
        unsigned int size : 2; 
        unsigned int delegateAlwaysNotifiesDelegateOfSegmentClicks : 1; 
        unsigned int momentaryClick : 1; 
        unsigned int tracking : 1; 
        unsigned int autosizeToFitSegments : 1; 
        unsigned int isSizingToFit : 1; 
        unsigned int autosizeText : 1; 
        unsigned int transparentBackground : 1; 
        unsigned int useProportionalWidthSegments : 1; 
        unsigned int translucentBackground : 1; 
        unsigned int appearanceNeedsUpdate : 1; 
    } _segmentedControlFlags;
    bool__hasTranslucentOptionsBackground;
}

@property long long segmentedControlStyle;
@property(getter=isMomentary) bool momentary;
@property(readonly) unsigned long long numberOfSegments;
@property bool apportionsSegmentWidthsByContent;
@property long long selectedSegmentIndex;
@property(retain) UIColor * tintColor;
@property(setter=_setTranslucentOptionsBackground:) bool _hasTranslucentOptionsBackground;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (double)defaultHeightForStyle:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1 size:(int)arg2;
+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)_modernBackgroundSelected:(bool)arg1 highlighted:(bool)arg2;
+ (id)_modernDividerImage;
+ (double)defaultHeight;

- (bool)_hasTranslucentOptionsBackground;
- (void)_setBadgeValue:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)_badgeValueForSegmentAtIndex:(unsigned long long)arg1;
- (struct UIOffset { double x1; double x2; })contentPositionAdjustmentForSegmentType:(long long)arg1 barMetrics:(long long)arg2;
- (void)setContentPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1 forSegmentType:(long long)arg2 barMetrics:(long long)arg3;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (id)backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)_setOptionsBackgroundImage:(id)arg1;
- (id)removedSegment;
- (void)_animateContentChangeWithAnimations:(id)arg1 completion:(id)arg2;
- (long long)selectedSegmentIndex;
- (unsigned long long)numberOfSegments;
- (bool)isEnabledForSegmentAtIndex:(unsigned long long)arg1;
- (void)setEnabled:(bool)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })contentOffsetForSegmentAtIndex:(unsigned long long)arg1;
- (void)setContentOffset:(struct CGSize { double x1; double x2; })arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (double)widthForSegmentAtIndex:(unsigned long long)arg1;
- (void)setWidth:(double)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)imageForSegmentAtIndex:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)_attributedTitleForSegmentAtIndex:(unsigned long long)arg1;
- (void)_setAttributedTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)titleForSegmentAtIndex:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)removeSegmentAtIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (void)_insertSegmentWithAttributedTitle:(id)arg1 atIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)insertSegmentWithImage:(id)arg1 atIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)insertSegmentWithTitle:(id)arg1 atIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)_setUsesNewAnimations:(bool)arg1;
- (bool)_usesNewAnimations;
- (bool)transparentBackground;
- (void)setTransparentBackground:(bool)arg1;
- (void)_setTranslucentOptionsBackground:(bool)arg1;
- (void)_setAutosizeText:(bool)arg1;
- (void)setSegmentControlStyle:(long long)arg1;
- (long long)segmentControlStyle;
- (long long)segmentedControlStyle;
- (void)_setAppearanceIsTiled:(bool)arg1 leftCapWidth:(unsigned long long)arg2 rightCapWidth:(unsigned long long)arg3;
- (void)_setSegmentedControlAppearance:(struct { id x1; double x2; double x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; id x_4_1_5; struct CGSize { double x_6_2_1; double x_6_2_2; } x_4_1_6; } x4; struct { id x_5_1_1; id x_5_1_2; id x_5_1_3; id x_5_1_4; id x_5_1_5; struct CGSize { double x_6_2_1; double x_6_2_2; } x_5_1_6; } x5; struct { id x_6_1_1; id x_6_1_2; id x_6_1_3; id x_6_1_4; id x_6_1_5; struct CGSize { double x_6_2_1; double x_6_2_2; } x_6_1_6; } x6; struct { id x_7_1_1; id x_7_1_2; id x_7_1_3; id x_7_1_4; id x_7_1_5; struct CGSize { double x_6_2_1; double x_6_2_2; } x_7_1_6; } x7; boolx8; }*)arg1;
- (void)_setOptionsShadowHidden:(bool)arg1;
- (bool)_optionsShadowHidden;
- (id)initWithItems:(id)arg1;
- (void)setApportionsSegmentWidthsByContent:(bool)arg1;
- (bool)apportionsSegmentWidthsByContent;
- (id)_createSegmentAtIndex:(int)arg1 position:(unsigned int)arg2 withInfo:(id)arg3;
- (void)_setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (void)_tapSegmentAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_clearSelectedSegment;
- (void)highlightSegment:(int)arg1;
- (void)_setHighlightedSegmentHighlighted:(bool)arg1;
- (void)_resetForAppearanceChange;
- (void)_setSelected:(bool)arg1 forSegmentAtIndex:(int)arg2 forceInfoDisplay:(bool)arg3;
- (bool)_shouldSelectSegmentAtIndex:(long long)arg1;
- (void)_setSelectedSegmentIndex:(long long)arg1 notify:(bool)arg2;
- (void)setRemovedSegment:(id)arg1;
- (void)_removeSegmentAnimationFinished:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)setSelectedSegmentIndex:(long long)arg1;
- (void)_insertSegment:(int)arg1 withInfo:(id)arg2 animated:(bool)arg3;
- (void)_setControlSize:(int)arg1 andInvalidate:(bool)arg2;
- (void)_setNeedsAppearanceUpdate;
- (void)_updateDividerImageForSegmentAtIndex:(unsigned long long)arg1;
- (void)_updateOptionsBackground;
- (void)_setCurrentBackgroundImage:(id)arg1;
- (void)removeAllSegments;
- (void)_setEnabled:(bool)arg1 forcePropagateToSegments:(bool)arg2;
- (void)_setSelectedSegmentIndex:(long long)arg1 notify:(bool)arg2 animate:(bool)arg3;
- (void)setSegmentedControlStyle:(long long)arg1;
- (id)_createAndAddSegmentAtIndex:(int)arg1 position:(unsigned int)arg2 withInfo:(id)arg3;
- (void)_commonSegmentedControlInit;
- (id)viewForBaselineLayout;
- (void)setMomentary:(bool)arg1;
- (double)_barHeight;
- (bool)isMomentary;
- (bool)_isInTranslucentToolbar;
- (bool)_isInMiniBar;
- (id)_optionsBackgroundImage;
- (bool)pointMostlyInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)shouldTrack;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (int)controlSize;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (long long)barStyle;
- (void)setBarStyle:(long long)arg1;
- (void)setControlSize:(int)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)updateForMiniBarState:(bool)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)sizeToFit;
- (void)setTintColor:(id)arg1;
- (id)_tintColorArchivingKey;
- (bool)useBlockyMagnificationInClassic;
- (void)setEnabled:(bool)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setAlpha:(double)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)infoViewForSegment:(long long)arg1;
- (long long)selectedSegment;
- (bool)isEnabledForSegment:(unsigned long long)arg1;
- (void)setEnabled:(bool)arg1 forSegment:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })contentOffsetForSegment:(unsigned long long)arg1;
- (void)setContentOffset:(struct CGSize { double x1; double x2; })arg1 forSegment:(unsigned long long)arg2;
- (float)widthForSegment:(unsigned long long)arg1;
- (void)setWidth:(float)arg1 forSegment:(unsigned long long)arg2;
- (id)imageForSegment:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegment:(unsigned long long)arg2;
- (id)titleForSegment:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 forSegment:(unsigned long long)arg2;
- (void)removeSegment:(unsigned long long)arg1 animated:(bool)arg2;
- (void)insertSegment:(unsigned long long)arg1 withImage:(id)arg2 animated:(bool)arg3;
- (void)insertSegment:(unsigned long long)arg1 withTitle:(id)arg2 animated:(bool)arg3;
- (void)addSegmentWithTitle:(id)arg1;
- (void)setImagePadding:(struct CGSize { double x1; double x2; })arg1 forSegment:(unsigned long long)arg2;
- (void)setAlwaysNotifiesDelegateOfSegmentClicks:(bool)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withStyle:(long long)arg2 withItems:(id)arg3;
- (void)setSelectedSegment:(long long)arg1;
- (void)selectSegment:(int)arg1;
- (void)setDelegate:(id)arg1;
- (id)scriptingInfoWithChildren;

@end
