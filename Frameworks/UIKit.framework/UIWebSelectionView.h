/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIView, NSTimer, UIWebSelection, UIWebSelectionOutline, UIWebSelectionNode, UIWebSelectionGraph, UIWebDocumentView, UIWebSelectionHandle, UIWebTextRangeView;

@interface UIWebSelectionView : UIView  {
    UIView *_center;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _selectionFrame;
    UIWebSelectionHandle *_top;
    UIWebSelectionHandle *_right;
    UIWebSelectionHandle *_bottom;
    UIWebSelectionHandle *_left;
    UIWebSelectionOutline *_outline;
    UIWebTextRangeView *_textRangeView;
    UIWebDocumentView *_documentView;
    UIWebSelectionNode *_selectionNode;
    UIWebSelectionGraph *_selectionGraph;
    double _growThreshold;
    double _shrinkThreshold;
    struct { 
        UIWebSelectionHandle *scrollingHandle; 
        double startTime; 
        int direction; 
        NSTimer *timer; 
    } _autoscrollData;
    struct { 
        UIWebSelectionHandle *activeHandle; 
        struct CGPoint { 
            double x; 
            double y; 
        } handleCenterStart; 
        double handleOffset; 
    } _blockSelectionData;
    struct { 
        UIWebSelectionHandle *start; 
        UIWebSelectionHandle *end; 
        struct CGSize { 
            double width; 
            double height; 
        } startingOffset; 
        boolanchorAtStart; 
        struct { 
            boolflipPossible; 
            boolrectsChanged; 
            struct CGRect { 
                struct CGPoint { 
                    double x; 
                    double y; 
                } origin; 
                struct CGSize { 
                    double width; 
                    double height; 
                } size; 
            } originalSelectionRect; 
        } flipData; 
    } _rangedSelectionData;
    bool_creatingSelection;
    int _nestedLayoutCalls;
    bool_calloutBarIsHiddenBeforeRotation;
    bool_rotating;
    int _selectionInFixedPosition;
}

@property(readonly) UIWebSelection * selection;
@property(retain) UIWebSelectionNode * selectionNode;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } selectionFrame;


- (bool)canFlip;
- (void)touchChanged:(id)arg1 forHandleInText:(id)arg2;
- (void)setSelectionFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2;
- (void)calloutBar:(id)arg1 selectedCommand:(id)arg2;
- (void)updateForChangedLayoutWhileManipulatingBlockSelectionHandle;
- (bool)activelyManipulatingBlockSelectionHandle;
- (void)updateForChangedLayoutWhileManipulatingTextSelectionHandle;
- (bool)activelyManipulatingTextSelectionHandle;
- (id)activeHandle;
- (void)updateFrameAndHandlesWithAnimation:(bool)arg1;
- (id)nodeInPristineGraphAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)resetSelection;
- (void)shiftWebRangeSelectionAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)touchChanged:(id)arg1 forHandle:(id)arg2;
- (void)autoscrollTimerFired:(id)arg1;
- (int)autoscrollDirectionsForHandle:(id)arg1;
- (id)selectionNode;
- (bool)isHorizontalWritingMode;
- (void)animateSloppyReleaseOfHandleInText:(id)arg1 withMagnifier:(id)arg2;
- (void)switchToBlockModeForHandle:(id)arg1;
- (bool)shouldSwitchToBlockModeForHandle:(id)arg1;
- (void)setOrientationOfMagnifier:(id)arg1 forHandleInText:(id)arg2;
- (void)considerFlipping;
- (void)stopAnyAutoscrolling;
- (void)updateAutoscrollForHandle:(id)arg1;
- (void)switchToTextModeForHandle:(id)arg1;
- (void)contractForActiveHandle;
- (bool)shouldContractForActiveHandle;
- (void)expandForActiveHandle;
- (bool)shouldExpandForActiveHandle;
- (void)computeExpandAndContractThresholdsForActiveHandle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })desiredBox;
- (void)setSelectionNode:(id)arg1;
- (void)setSelectionFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })fetchSelectionBoundingRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })fetchSelectionBoundingTextSelectionRect;
- (void)setHandleCenters;
- (void)hideCopyCallout;
- (id)handles;
- (void)showCopyCalloutWithAnimation:(bool)arg1;
- (void)updateTextRangeViewSelectionRects;
- (void)onAfterScrollOrZoomShowingSelection:(bool)arg1;
- (void)onBeforeScrollOrZoomHidingSelection:(bool)arg1;
- (bool)updateRectForCalloutBar:(id)arg1 inWindow:(id)arg2;
- (id)handleWithPosition:(int)arg1;
- (id)tintView;
- (void)showControlsAfterRotation;
- (void)hideControlsBeforeRotation;
- (void)endSelectionCreationWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)updateSelectionCreationWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)startSelectionCreationWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)hideControls;
- (id)initWithWebDocumentView:(id)arg1;
- (id)scroller;
- (void)showControls;
- (void)didEndScrollingOrZoomingPage;
- (void)willStartScrollingOrZoomingPage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionFrame;
- (void)scaleChanged;
- (void)didEndScrollingOverflow;
- (void)willStartScrollingOverflow;
- (void)layoutChangedByScrolling:(bool)arg1;
- (void)clearSelection;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;
- (void)selectionChanged;
- (void)updateSelectionRects;
- (id)selection;
- (void)_didScroll;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)removeFromSuperview;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)dealloc;

@end
