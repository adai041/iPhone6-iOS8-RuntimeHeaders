/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSString, UIImage, UIImageView, <UIMovieScrubberDataSource>, UIMovieScrubberTrackView, UIMovieScrubberEditingView, <UIMovieScrubberDelegate>, UILabel;

@interface UIMovieScrubber : UIControl <UIMovieScrubberTrackViewDataSource, UIMovieScrubberTrackViewDelegate> {
    UIImageView *_thumbView;
    UIMovieScrubberTrackView *_trackView;
    UIMovieScrubberEditingView *_editingView;
    UILabel *_elapsedLabel;
    UILabel *_remainingLabel;
    int _timeComponents;
    UIImage *_fillImage;
    UIImage *_innerShadowImage;
    UIImage *_maskImage;
    UIImage *_shadowImage;
    <UIMovieScrubberDataSource> *_dataSource;
    <UIMovieScrubberDelegate> *_delegate;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _trackRect;
    double _hitOffset;
    double _zoomDelay;
    bool_showTimeViews;
    bool_editable;
    double _value;
    double _maximumValue;
    double _minimumValue;
    struct CGPoint { 
        double x; 
        double y; 
    } _touchLocationWhenTrackPressBegan;
    double _trimStartValue;
    double _trimEndValue;
    double _minTrimmedLength;
    double _maxTrimmedLength;
    double _zoomAnimationDuration;
    double _zoomAnimationDelay;
    struct { 
        unsigned int continuous : 1; 
        unsigned int animating : 1; 
        unsigned int creatingSnapshot : 1; 
        unsigned int needsReload : 1; 
        unsigned int layoutTimeViews : 1; 
        unsigned int computeTrackRect : 1; 
        unsigned int clampingTrimRange; 
        unsigned int zoomed : 1; 
        unsigned int zoomAnimating : 1; 
        unsigned int trackIsPressed : 1; 
        unsigned int trackAnimating : 1; 
        unsigned int thumbIsVisible : 1; 
        unsigned int handleIsPressed : 1; 
        unsigned int willBeginEditing : 1; 
        unsigned int editing : 1; 
        unsigned int editingHandle; 
        unsigned int rotationDisabled; 
        unsigned int isInNavigationBar : 1; 
        unsigned int delegateValueDidChange : 1; 
        unsigned int delegateStartValueDidChange : 1; 
        unsigned int delegateEndValueDidChange : 1; 
        unsigned int delegateWillBeginRequestingThumbnails : 1; 
        unsigned int delegateDidFinishRequestingThumbnails : 1; 
        unsigned int delegateWillBeginEditing : 1; 
        unsigned int delegateDidBeginEditing : 1; 
        unsigned int delegateDidCancelEditing : 1; 
        unsigned int delegateEditingAnimationFinished : 1; 
        unsigned int delegateWidthDeltaOriginXDelta : 1; 
        unsigned int delegateDidBeginAnimatingZoom : 1; 
        unsigned int delegateDidEndAnimatingZoom : 1; 
        unsigned int delegateWillZoom : 1; 
        unsigned int dataSourceRequestThumbnailImageIsSummmary : 1; 
    } _sliderFlags;
    double _edgeInset;
}

@property double value;
@property double duration;
@property double minimumTrimLength;
@property double maximumTrimLength;
@property double trimStartValue;
@property double trimEndValue;
@property(readonly) double zoomMinimumValue;
@property(readonly) double zoomMaximumValue;
@property(getter=isZoomAnimating,readonly) bool zoomAnimating;
@property bool thumbIsVisible;
@property(getter=isEditable) bool editable;
@property(getter=isContinuous) bool continuous;
@property <UIMovieScrubberDataSource> * dataSource;
@property <UIMovieScrubberDelegate> * delegate;
@property double zoomDelay;
@property bool showTimeViews;
@property(readonly) bool isInsideNavigationBar;
@property double edgeInset;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } alignmentMargins;
@property(getter=isEditing) bool editing;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (id)timeStringForSeconds:(int)arg1 forceFullWidthComponents:(bool)arg2 isElapsed:(bool)arg3;

- (double)edgeInset;
- (void)setMinimumTrimLength:(double)arg1;
- (double)minimumTrimLength;
- (void)setMaximumTrimLength:(double)arg1;
- (double)maximumTrimLength;
- (void)setShowTimeViews:(bool)arg1;
- (bool)showTimeViews;
- (void)setZoomDelay:(double)arg1;
- (double)zoomDelay;
- (bool)isZoomAnimating;
- (double)zoomMaximumValue;
- (double)zoomMinimumValue;
- (void)forceUnzoom;
- (bool)forceZoom;
- (double)trimEndValue;
- (double)trimStartValue;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentMargins;
- (void)animateAfterEdit;
- (bool)thumbIsVisible;
- (void)_cancelTrackPressIfNeccessaryWithTouch:(id)arg1;
- (void)_beginTrackPressWithTouch:(id)arg1 touchesBegan:(bool)arg2;
- (double)_valueForTouch:(id)arg1;
- (int)_editingHandleWithTouch:(id)arg1;
- (bool)pointInsideThumb:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)setRotationDisabled:(bool)arg1;
- (void)_setZoomAnimating:(bool)arg1;
- (void)_trackPressWasHeld;
- (void)setTrimStartValue:(double)arg1;
- (void)setTrimEndValue:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbRectForValue:(double)arg1;
- (void)_updateThumbLocation;
- (void)_updateTimes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })trackRect;
- (void)_computeTrackRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_animateAfterEdit:(bool)arg1;
- (void)animateCancelEdit;
- (void)_cancelTrackPress:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_editingRectForStartTime:(double)arg1 endTime:(double)arg2;
- (void)setThumbIsVisible:(bool)arg1;
- (void)_trimAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)setEdgeInset:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_editingRect;
- (void)_sliderValueDidChange:(id)arg1;
- (void)setZoomAnimationDuration:(double)arg1;
- (void)setThumbnailImage:(struct CGImage { }*)arg1 forTimestamp:(id)arg2;
- (bool)isInsideNavigationBar;
- (id)movieScrubberTrackView:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4;
- (double)movieScrubberTrackViewDuration:(id)arg1;
- (double)movieScrubberTrackViewThumbnailAspectRatio:(id)arg1;
- (void)movieScrubberTrackView:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2 isSummaryThumbnail:(bool)arg3;
- (double)movieScrubberTrackViewZoomAnimationDelay:(id)arg1;
- (double)movieScrubberTrackViewZoomAnimationDuration:(id)arg1;
- (void)movieScrubberTrackViewDidFinishRequestingThumbnails:(id)arg1;
- (void)movieScrubberTrackViewWillBeginRequestingThumbnails:(id)arg1;
- (void)movieScrubberTrackViewDidCollapse:(id)arg1;
- (void)movieScrubberTrackViewDidExpand:(id)arg1;
- (void)movieScrubberTrackView:(id)arg1 clampedSizeWidthDelta:(double)arg2 actualSizeWidthDelta:(double)arg3 originXDelta:(double)arg4 minimumVisibleValue:(double)arg5 maximumVisibleValue:(double)arg6;
- (bool)isAnimatingValueChange;
- (void)setContinuous:(bool)arg1;
- (bool)isContinuous;
- (void)_setValue:(double)arg1 andSendAction:(bool)arg2;
- (void)_sliderAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_sliderAnimationWillStart:(id)arg1 context:(id)arg2;
- (void)setValue:(double)arg1 animated:(bool)arg2;
- (void)_initSubviews;
- (void)setEditable:(bool)arg1;
- (void)_sendDelayedActions;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (bool)isEditing;
- (id)_scriptingInfo;
- (bool)_alwaysHandleScrollerMouseEvent;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)didMoveToSuperview;
- (double)value;
- (bool)cancelTouchTracking;
- (id)scriptingInfoWithChildren;
- (void)setValue:(double)arg1;
- (bool)isEditable;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)setDuration:(double)arg1;
- (double)duration;
- (id)delegate;
- (id)dataSource;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)init;
- (void)reloadData;
- (void)didMoveToWindow;
- (void)setDelegate:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

@end
