/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSMutableDictionary, NSDictionary, _UIQueuingScrollView, UITapGestureRecognizer, <UIPageViewControllerDataSource>, <UIPageViewControllerDelegate>, NSMutableArray, NSString, _UIPageViewControllerContentView, _UIPageCurl, NSArray, UIPanGestureRecognizer;

@interface UIPageViewController : UIViewController <UIGestureRecognizerDelegate, _UIQueuingScrollViewDelegate, _UIQueuingScrollViewDataSource> {
    <UIPageViewControllerDelegate> *_delegate;
    <UIPageViewControllerDataSource> *_dataSource;
    long long _transitionStyle;
    long long _navigationOrientation;
    long long _spineLocation;
    bool_doubleSided;
    bool_pageControlRequiresValidation;
    NSArray *_viewControllers;
    _UIPageCurl *_pageCurl;
    UIPanGestureRecognizer *_panGestureRecognizer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    bool_stashingViewControllersForRotation;
    NSArray *_viewControllersStashedForRotation;
    bool_interfaceRotating;
    NSMutableArray *_rotationSnapshotViews;
    long long _spineLocationPriorToInterfaceRotation;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _tapRegionInsets;
    struct CGSize { 
        double width; 
        double height; 
    } _tapRegionBreadths;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _effectiveTapRegionInsets;
    struct CGSize { 
        double width; 
        double height; 
    } _effectiveTapRegionBreadths;
    struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } *_tapRegions;
    double _pageSpacing;
    NSMutableDictionary *_cachedViewControllersForCurl;
    NSMutableArray *_cachedViewControllersForScroll;
    NSDictionary *_incomingAndOutgoingViewControllersForManualTransition;
    long long _lastKnownNavigationDirection;
    long long _disableAutorotationCount;
    struct { 
        unsigned int delegateWantsTransitionWillBegin : 1; 
        unsigned int delegateWantsTransitionCompleted : 1; 
        unsigned int delegateWantsTransitionsFinished : 1; 
        unsigned int delegateCustomizesSpineLocationForInterfaceOrientation : 1; 
        unsigned int delegateSupportedInterfaceOrientations : 1; 
        unsigned int delegatePreferredInterfaceOrientationForPresentation : 1; 
        unsigned int dataSourceSuppliesBeforeViewController : 1; 
        unsigned int dataSourceSuppliesAfterViewController : 1; 
        unsigned int dataSourceSuppliesPageCount : 1; 
        unsigned int dataSourceSuppliesPageNumber : 1; 
    } _delegateFlags;
}

@property <UIPageViewControllerDelegate> * delegate;
@property <UIPageViewControllerDataSource> * dataSource;
@property(readonly) long long transitionStyle;
@property(readonly) long long navigationOrientation;
@property(readonly) long long spineLocation;
@property(getter=isDoubleSided) bool doubleSided;
@property(readonly) NSArray * gestureRecognizers;
@property(readonly) NSArray * viewControllers;
@property(readonly) long long _transitionStyle;
@property(readonly) long long _navigationOrientation;
@property(setter=_setViewControllers:,retain) NSArray * _viewControllers;
@property(setter=_setViewControllersStashedForRotation:,retain) NSArray * _viewControllersStashedForRotation;
@property(getter=_isPageControlVisible,readonly) bool _pageControlVisible;
@property(readonly) _UIPageViewControllerContentView * _contentView;
@property(readonly) _UIQueuingScrollView * _scrollView;
@property(setter=_setPageSpacing:) double _pageSpacing;
@property(getter=_isInterfaceRotating,readonly) bool _interfaceRotating;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (id)_incomingViewControllerKeys;
+ (id)_outgoingViewControllerKeys;
+ (id)stringForSpineLocation:(long long)arg1;
+ (bool)_isSpineLocation:(long long)arg1 supportedForTransitionStyle:(long long)arg2;
+ (bool)_isNavigationOrientation:(long long)arg1 supportedForTransitionStyle:(long long)arg2;
+ (bool)_isSupportedTransitionStyle:(long long)arg1;
+ (bool)doesOverridePreferredInterfaceOrientationForPresentation;
+ (bool)doesOverrideSupportedInterfaceOrientations;

- (bool)_isInterfaceRotating;
- (id)_viewControllersStashedForRotation;
- (void)setViewControllers:(id)arg1 direction:(long long)arg2 animated:(bool)arg3 completion:(id)arg4;
- (struct CGSize { double x1; double x2; })_contentSizeForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setDisabledScrollingRegion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_disabledScrollingRegion;
- (void)_setTapRegionBreadths:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_tapRegionBreadths;
- (void)_setTapRegionInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_tapRegionInsets;
- (void)setDoubleSided:(bool)arg1;
- (bool)isDoubleSided;
- (long long)spineLocation;
- (void)queuingScrollView:(id)arg1 didFlushView:(id)arg2 animated:(bool)arg3;
- (id)queuingScrollView:(id)arg1 viewAfterView:(id)arg2;
- (id)queuingScrollView:(id)arg1 viewBeforeView:(id)arg2;
- (bool)queuingScrollViewShouldLayoutSubviews:(id)arg1;
- (void)queuingScrollViewDidFinishScrolling:(id)arg1;
- (void)queuingScrollView:(id)arg1 didBailoutOfScrollAndRevealedView:(id)arg2;
- (void)queuingScrollView:(id)arg1 didEndManualScroll:(bool)arg2 toRevealView:(id)arg3 direction:(long long)arg4 animated:(bool)arg5 didFinish:(bool)arg6 didComplete:(bool)arg7;
- (void)queuingScrollView:(id)arg1 didCommitManualScroll:(bool)arg2 toRevealView:(id)arg3 concealView:(id)arg4 direction:(long long)arg5 animated:(bool)arg6 canComplete:(bool)arg7;
- (void)queuingScrollView:(id)arg1 willManuallyScroll:(bool)arg2 toRevealView:(id)arg3 concealView:(id)arg4 animated:(bool)arg5;
- (void)_flushViewController:(id)arg1 animated:(bool)arg2;
- (id)_queuingScrollView:(id)arg1 viewBefore:(bool)arg2 view:(id)arg3;
- (bool)_shouldCompleteManualCurlWithSuggestedVelocity:(double*)arg1;
- (long long)_navigationEndDirectionInResponseToPanGestureRecognizer:(id)arg1 suggestedVelocity:(double*)arg2;
- (id)_incomingViewControllersForGestureDrivenCurlInDirection:(long long)arg1;
- (bool)_shouldBeginNavigationInDirection:(long long*)arg1 inResponseToPanGestureRecognizer:(id)arg2;
- (bool)_shouldNavigateInDirection:(long long*)arg1 inResponseToTapGestureRecognizer:(id)arg2;
- (bool)_shouldNavigateInDirection:(long long*)arg1 inResponseToVelocity:(double*)arg2 ofGestureRecognizedByPanGestureRecognizer:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)_tapRegions;
- (id)_viewControllerBeforeViewController:(id)arg1;
- (id)_viewControllerAfterViewController:(id)arg1;
- (void)_cacheViewControllerForScroll:(id)arg1;
- (void)_invalidateViewControllersStashedForCurlFromDataSource;
- (id)_viewControllersForCurlWithViewControllers:(id)arg1 direction:(long long)arg2;
- (void)_setViewControllers:(id)arg1;
- (void)_populateIncomingViewControllersInMap:(id)arg1 withViewControllers:(id)arg2 forCurlInDirection:(long long)arg3;
- (void)_populateOutgoingViewControllersInMap:(id)arg1;
- (id)_validatedViewControllersForTransitionWithViewControllers:(id)arg1 animated:(bool)arg2;
- (bool)_isCurrentViewControllerStateValid;
- (id)_viewControllerBefore:(bool)arg1 viewController:(id)arg2;
- (void)_child:(id)arg1 didRotateFromInterfaceOrientation:(long long)arg2;
- (void)_child:(id)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)_child:(id)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (id)_viewControllersForPendingSpineLocation:(long long)arg1;
- (id)_validatedViewControllersForPresentationOfViewControllers:(id)arg1 validRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_validRangeForPresentationOfViewControllersWithSpineLocation:(long long)arg1;
- (void)_sendChildViewWill:(bool)arg1 appear:(bool)arg2 animated:(bool)arg3;
- (void)_setViewControllersStashedForRotation:(id)arg1;
- (void)_invalidatePageCurl;
- (long long)_requestSpineLocationForInterfaceOrientationAndUpdateStashedViewControllers:(long long)arg1;
- (void)_child:(id)arg1 endAppearanceTransitionIfPossible:(bool)arg2;
- (void)_childEndAppearanceTransition:(id)arg1;
- (bool)_childCanEndAppearanceTransition:(id)arg1;
- (void)_child:(id)arg1 beginAppearanceTransitionIfPossible:(bool)arg2 animated:(bool)arg3;
- (void)_child:(id)arg1 beginAppearanceTransition:(bool)arg2 animated:(bool)arg3;
- (bool)_child:(id)arg1 canBeginAppearanceTransition:(bool)arg2;
- (void)_setViewControllers:(id)arg1 withScrollInDirection:(long long)arg2 animated:(bool)arg3 completion:(id)arg4;
- (void)_setViewControllers:(id)arg1 withCurlOfType:(long long)arg2 fromLocation:(struct CGPoint { double x1; double x2; })arg3 direction:(long long)arg4 animated:(bool)arg5 notifyDelegate:(bool)arg6 completion:(id)arg7;
- (struct CGSize { double x1; double x2; })_effectiveTapRegionBreadths;
- (void)_invalidateEffectiveTapRegions;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_effectiveTapRegionInsets;
- (long long)_navigationOrientation;
- (bool)_canHandleGestures;
- (void)_handleTapGesture:(id)arg1;
- (void)_handlePanGesture:(id)arg1;
- (id)initWithTransitionStyle:(long long)arg1 navigationOrientation:(long long)arg2 options:(id)arg3;
- (void)_setPageSpacing:(double)arg1;
- (void)_setSpineLocation:(long long)arg1;
- (void)_updatePageControlViaDataSourceIfNecessary;
- (void)_pageControlValueChanged:(id)arg1;
- (void)_contentViewFrameOrBoundsDidChange;
- (long long)navigationOrientation;
- (bool)_isPageControlVisible;
- (double)_pageSpacing;
- (id)_viewControllers;
- (id)_pageControl;
- (id)_scrollView;
- (id)viewControllers;
- (void)_endDisablingInterfaceAutorotation;
- (void)_beginDisablingInterfaceAutorotation;
- (bool)_shouldSynthesizeSupportedOrientations;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewDidAppear:(bool)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldAutomaticallyForwardRotationMethods;
- (void)viewWillUnload;
- (bool)_shouldPersistViewWhenCoding;
- (void)viewWillAppear:(bool)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)_gestureRecognizerShouldBegin:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (id)gestureRecognizers;
- (long long)_transitionStyle;
- (long long)transitionStyle;
- (id)delegate;
- (id)dataSource;
- (id)_contentView;
- (void)setDelegate:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end
